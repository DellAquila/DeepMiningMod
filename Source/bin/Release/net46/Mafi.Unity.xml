<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mafi.Unity</name>
    </assembly>
    <members>
        <member name="M:Mafi.Unity.GameObjectAssertions.IsValidUnityObject``1(Mafi.Assertion{``0},System.String)">
            <summary>
            Asserts that given <see cref="T:UnityEngine.GameObject"/> is not null or destroyed.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectAssertions.IsValidUnityObjectOrNone``1(Mafi.Assertion{Mafi.Option{``0}},System.String)">
            <summary>
            Asserts that given <see cref="T:Mafi.Option`1"/> valid unity object or None.
            </summary>
        </member>
        <member name="F:Mafi.Unity.AssetBundleLoader.s_expectedHeader">
            <summary>
            File header of Unity asset bundles.
            </summary>
        </member>
        <member name="P:Mafi.Unity.AssetBundleLoader.LoadedAssets">
            <summary>
            Note that this may contain duplicate object for normal and lowercase key paths.
            </summary>
        </member>
        <member name="F:Mafi.Unity.AssetsDb.DefaultMaterial">
            <summary>
            Returns "Standard" material. This should be used only for debugging purposes. All materials should be loaded
            from assets.
            </summary>
        </member>
        <member name="P:Mafi.Unity.AssetsDb.LoadedAssets">
            <summary>
            Note that this may contain duplicate object for normal and lowercase key paths.
            </summary>
        </member>
        <member name="M:Mafi.Unity.AssetsDb.RegisterAssetBundlesIn(System.String,System.String)">
            <summary>
            Registers all asset bundles in the given directory. Does nothing if the given dir path is already
            registered.
            </summary>
        </member>
        <member name="M:Mafi.Unity.AssetsDb.LoadAllRegisteredAssets">
            <summary>
            Forces loading of all registered bundles.
            </summary>
        </member>
        <member name="M:Mafi.Unity.AssetsDb.TryGetSharedAsset``1(System.String,``0@,System.Boolean)">
            <summary>
            Retrieves asset at given <paramref name="assetPath"/> as <typeparamref name="T"/>. Returns true is asset was
            found. Returned instance is a reference to global asset database. Make yourself a copy if you want to change
            it.
            </summary>
        </member>
        <member name="M:Mafi.Unity.AssetsDb.GetSharedAssetOrThrow``1(System.String)">
            <summary>
            Returns asset at given path but throws <see cref="T:Mafi.Unity.AssetsDbException"/> if asset is not found. Use this only
            during game initialization when exception is actually wanted, otherwise use
            <see cref="M:Mafi.Unity.AssetsDb.TryGetSharedAsset``1(System.String,``0@,System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.AssetsDb.GetSharedMaterial(System.String)">
             <summary>
             Returns a shared <see cref="T:UnityEngine.Material"/> from DB. Returned material is not cloned and will be shared with all
             objects. If you wish to change properties of this material please use <see cref="M:Mafi.Unity.AssetsDb.GetClonedMaterial(System.String)"/>.
            
             If requested material does not exist, <see cref="F:Mafi.Unity.AssetsDb.DefaultMaterial"/> is returned.
            
             Note that assigning <see cref="P:UnityEngine.Renderer.material"/> will make a copy but
             <see cref="P:UnityEngine.Renderer.sharedMaterial"/> will not.
             </summary>
        </member>
        <member name="M:Mafi.Unity.AssetsDb.GetClonedMaterial(System.String)">
             <summary>
             Returns a clone of <see cref="T:UnityEngine.Material"/> from DB. Use this if you wish to change properties of this
             material. Otherwise, if you do not want to change this material consider using <see
             cref="M:Mafi.Unity.AssetsDb.GetSharedMaterial(System.String)"/> that will not make a copy.
            
             If requested material does not exist, <see cref="F:Mafi.Unity.AssetsDb.DefaultMaterial"/> is returned.
             </summary>
        </member>
        <member name="M:Mafi.Unity.AssetsDb.GetSharedTexture(System.String)">
            <summary>
            Returns a shared <see cref="T:UnityEngine.Texture2D"/>
            </summary>
        </member>
        <member name="M:Mafi.Unity.AssetsDb.GetSharedSprite(System.String,System.Nullable{UnityEngine.Vector4})">
            <summary>
            Returns shared sprite resource from the given path.
            </summary>
            <param name="spriteAssetPath">Path to the sprite.</param>
            <param name="border">Border if the sprite is sliced otherwise null.</param>
        </member>
        <member name="M:Mafi.Unity.AssetsDb.TryGetSharedPrefab(System.String,UnityEngine.GameObject@,System.Boolean)">
            <summary>
            Returns stored prefab in the DB. Any modifications will mutate the stored prefab. Use with caution!
            </summary>
        </member>
        <member name="T:Mafi.Unity.Audio.AudioChannel">
             <summary>
             Represents IDs of groups in Unity's audio mixer.
             </summary>
             <remarks>
             IDs must have default values since they are used as indices to arrays
            
             If you are adding new channel here you need to create exposed variable via Unity. The name of the variable
             must exactly match "{ChannelName}Volume" (right click on volume of the channel in mixer, expose, then rename).
             See https://docs.unity3d.com/Manual/AudioMixerInspectors.html
             </remarks>
        </member>
        <member name="F:Mafi.Unity.Audio.AudioChannel.Master">
            <summary>
            Controls master volume of the entire game, do not put audio directly here.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Audio.AudioChannel.EffectsGroup">
            <summary>
            EffectsGroup controls sub-groups. Don't put audio directly here.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Audio.AudioDb">
            <summary>
            Database that fetches audio using <see cref="T:Mafi.Unity.AssetsDb"/> and stores as <see cref="T:UnityEngine.AudioSource"/> to be easily
            retrieved.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Audio.EntityAudioManager.UPDATE_DISTANCE">
            <summary>
            If the camera moves more than the distance specified here, we update the sounds currently played.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Audio.EntityAudioManager.m_prevListenerPosition">
            <summary>
            Position of the camera at the time we've last updated the playing sounds.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Audio.EntityAudioManager.renderUpdate(Mafi.Core.GameTime)">
            <summary>
            TODO: this could be more effective - for example we should not go through all unhearable sounds, but only
            through those close to the listener when updating hearable sounds
            </summary>
        </member>
        <member name="M:Mafi.Unity.Audio.EntityAudioManager.updateGroupOfSounds(Mafi.Collections.Lyst{Mafi.Unity.Audio.IEntitySoundFriend})">
            <summary>
            TODO: Consider treating z-elevation in special way and fade-out sounds more quickly
            TODO: Consider disabling unhearable sounds
            TODO: Consider going through unhearable sounds less often
            </summary>
            <param name="sounds"></param>
        </member>
        <member name="F:Mafi.Unity.Audio.EntitySoundMb.FADING_TIME_S">
            <summary>
            The time it takes for the sound to fade in or out in seconds.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Audio.EntitySoundMb.LOW_PRIORITY">
            <summary>
            Priority assigned to sounds when they fade out to 0 volume and thus cannot be heard anyway.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Audio.EntitySoundMb.m_volumeTarget">
            <summary>
            Volume state we are fading to.
            </summary>
        </member>
        <member name="P:Mafi.Unity.Audio.IEntitySoundFriend.Transform">
            <summary>
            Position of the sound.
            </summary>
        </member>
        <member name="P:Mafi.Unity.Audio.IEntitySoundFriend.ListenerDistance">
            <summary>
            Distance from the listener.
            </summary>
        </member>
        <member name="T:Mafi.Unity.BuildableCanvasMb">
            <summary>
            Mono Behavior that allows creation of a mesh for UI with <see cref="T:Mafi.Unity.MeshBuilder"/>.
            </summary>
        </member>
        <member name="T:Mafi.Unity.BuildableMb">
            <summary>
            Mono Behavior that allows creation of the mesh with <see cref="T:Mafi.Unity.MeshBuilder"/>.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Buildings.DataCenterMb.m_rackChangesSync">
            <summary>
            Queue of rack changes. Rack changes are added in the simulation thread, so this may not be touched by the UI
            thread. As the UI thread should be invoked more often than the simulation thread, we expect to have at most
            one element in this queue under normal conditions.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Buildings.DataCenterMb.m_rackChanges">
            <summary>
            List of rack changes to be processed by <see cref="!:RenderUpdate"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Buildings.DataCenterMb.rackAdded(Mafi.Core.Factory.Datacenters.ServerRackProto)">
            <summary>
            Called by a datacenter in sim thread after a rack is added. Can touch only m_rackChangesSyncQueue.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Buildings.DataCenterMb.rackRemoved(Mafi.Core.Factory.Datacenters.ServerRackProto)">
            <summary>
            Called by a datacenter in sim thread after a rack is removed. Can touch only m_rackChangesSyncQueue.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Camera.CameraController">
            <summary>
            Controls camera with user input.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Camera.CameraController.Camera">
            <summary>
            Main camera used for rendering of the scene.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Camera.CameraController.Listener">
            <summary>
            The single AudioListener in the scene on a sub-object of the camera. Having the AudioListener in a separate
            object instead of the Camera's object allows to specify where we want to listen to sounds.
            </summary>
        </member>
        <member name="P:Mafi.Unity.Camera.CameraController.IsEnabled">
            <summary>
            Whether the camera control is enabled (handy to disable when showing fullscreen window).
            </summary>
        </member>
        <member name="E:Mafi.Unity.Camera.CameraController.FreeLookModeChanged">
            <summary>
            Invoked when <see cref="P:Mafi.Unity.Camera.CameraController.IsInFreeLookMode"/> is changed. Invoked on the main thread.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Camera.CameraController.renderUpdateEnd(Mafi.Core.GameTime)">
            <summary>
            Update camera at the end of rendering updates, so that all other MBs are already updated.
            This is especially important for smooth tracking.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Camera.OrbitalCameraModel">
            <summary>
            Camera controller that implements orbital camera. Camera orbits around a pivot point at a given distance.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Camera.OrbitalCameraModel.m_keyPanScale">
            <summary>
            Pan rate.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Camera.OrbitalCameraModel.WHEEL_ZOOM_SCALE">
            <summary>
            Wheel returns 0.1 per tick, that's 10% zoom per tick which is ok as is.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Camera.OrbitalCameraModel.KEY_ZOOM_SCALE_PER_SEC_DEFAULT">
            <summary>
            Makes key zoom 20% per key press.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Camera.OrbitalCameraModel.MOUSE_LOOK_SCALE">
            <summary>
            6 degrees per pixel.
            </summary>
        </member>
        <member name="P:Mafi.Unity.Camera.OrbitalCameraModel.PitchAngleTarget">
            <summary>
            Pitch is 0 when camera looks parallel with the ground. 90 looks directly down.
            </summary>
        </member>
        <member name="P:Mafi.Unity.Camera.OrbitalCameraModel.YawAngleTarget">
            <summary>
            Yaw angle is 0 when camera looks in +Y direction (+Z in unity) and increases as it turns counter-clock wise.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Camera.OrbitalCameraModel.recomputePivotHeight">
            <summary>
            Computes pivot height at given terrain coordinate based on multiple samples. If some of the terrain samples
            are missing current height is returned.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Camera.OrbitalCameraModel.isValidPosition(Mafi.Tile2f)">
            <summary>
            Whether given position is valid for the camera. Only unlocked tiles are considered valid.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Console.Commands.GeneralUiCommands">
            <summary>
            Place for writing debug/testing console commands or commands that do not belong elsewhere. Public methods are
            automatically registered as commands.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Console.ConsoleUi">
            <summary>
            UI of in-game console, capable of invoking game console commands. Control and view are not divided for this part
            of UI. Show console through '`', hide through 'Esc'.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Console.ConsoleUi.COMMANDS_HISTORY_TO_RELOAD">
            <summary>
            Size of commands history file to reload and re-read last used commands to history.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Console.ConsoleUi.inputUpdate(Mafi.Core.GameTime)">
            <summary>
            Input update callback registered always, activates console on '`' key.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Console.ConsoleUi.InputUpdate(Mafi.Core.Input.IInputScheduler)">
            <summary>
            Input update invoked only when the console is active <see cref="T:Mafi.Unity.InputControl.IUnityInputController"/>, needed so that the
            console cooperates well with other tools.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.ColorizableMaterialsCache">
            <summary>
            Utility for setting colors to entities with colorizable shaders. Colored materials are cached.
            </summary>
            <remarks>
            Should only be used to color GameObjects which were not previously colored and their materials have not been
            changed in any other way.
            </remarks>
        </member>
        <member name="T:Mafi.Unity.Entities.Dynamic.PathFindingEntityMbFactory">
            <summary>
            Default MB factory for all entities of base type <see cref="T:Mafi.Core.Entities.Dynamic.PathFindingEntity"/>. This serves as a fall-back to
            all entities that do not have their own custom factories.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.EntitiesRenderingManager">
            <summary>
            Manages delegation of different entities renderers.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Entities.EntitiesRenderingManager.AddHighlight(Mafi.Core.Entities.IRenderedEntity,Mafi.ColorRgba)">
            <summary>
            Highlights entity and returns ID for this highlight.
            The highlight must be removed via <see cref="M:Mafi.Unity.Entities.EntitiesRenderingManager.RemoveHighlight(System.UInt64)"/>.
            Returned ID is never 0 so the value 0 can be used as "invalid" value.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.EntityHighlighterLegacy">
            <summary>
            Manages entity highlighting. Consider using instantiated class <see cref="T:Mafi.Unity.Entities.EntityHighlighter"/> instead.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.EntityHighlighter">
            <summary>
            Instantiate this class for entity highlighting needs.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Entities.EntityHighlighter.HighlightOnly(Mafi.Core.Entities.IRenderedEntity,Mafi.ColorRgba)">
            <summary>
            Highlights only this entity, removing other highlights.
            </summary>
        </member>
        <member name="P:Mafi.Unity.Entities.IEntityMbWithSyncUpdateMaybe.NeedsSyncUpdate">
            <summary>
            WARNING: This is tested only once when the mb is added!
            </summary>
        </member>
        <member name="M:Mafi.Unity.Entities.IEntityMbWithSyncUpdate.SyncUpdate(Mafi.Core.GameTime)">
            <summary>
            Called on the main thread when both sim and update threads are in sync. Limit processing in this method to
            absolute minimum.
            </summary>
        </member>
        <member name="P:Mafi.Unity.Entities.IEntityMbWithRenderUpdateMaybe.NeedsRenderUpdate">
            <summary>
            WARNING: This is tested only once when the mb is added!
            </summary>
        </member>
        <member name="M:Mafi.Unity.Entities.IEntityMbWithRenderUpdate.RenderUpdate(Mafi.Core.GameTime)">
            <summary>
            Called once very frame on the main thread. Don't touch sim state.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.EntityMb">
             <summary>
             Abstract base class for entities handling audio, emissions, and animations.
            
             Warning: Do not try to <c>.AddComponent&lt;EntityMb&gt;()</c> as this is abstract class and unity will happily
             return null without any error.
             </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.IEntityMbFactory`1">
            <summary>
            Common interface for all factories of entities.
            </summary>
            <typeparam name="T">Type of entity handled by this factory.</typeparam>
        </member>
        <member name="T:Mafi.Unity.Entities.EntityMbFactory">
            <summary>
            Convenience class for creation of <see cref="T:Mafi.Unity.Entities.EntityMb"/>.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.IEntitiesRenderer">
            <summary>
            Handles rendering of some type of entities.
            May use low 7 bytes of <see cref="P:Mafi.Core.Entities.IRenderedEntity.RendererData"/> for bookkeeping.
            </summary>
        </member>
        <member name="P:Mafi.Unity.Entities.IEntitiesRenderer.Priority">
            <summary>
            The lower the higher priority.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Entities.IEntitiesRenderer.CanRenderEntity(Mafi.Core.Entities.EntityProto)">
            <summary>
            Whether this renderer can render the given entity.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Entities.IEntitiesRenderer.AddHighlight(Mafi.Core.Entities.IRenderedEntity,Mafi.ColorRgba)">
            <summary>
            Highlights the given entity and returns highlight ID. Returned ID can only use low 7 bytes of the ulong.
            A single entity can be independently highlighted multiple times.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Entities.IEntitiesRenderer.RemoveHighlight(System.UInt64)">
            <summary>
            Removes highlight based on the given ID.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Entities.IEntitiesRenderer.SyncUpdate(Mafi.Core.GameTime)">
            <summary>
            Sync update called on all renderers in the order of their priority.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.DelayedEntitiesRenderer">
            <summary>
            Helper class that delays entity operations from sim to sync.
            Ideally, we should not be doing much work during sync so consider this as a temporary solution before all
            renderers can accept events on sim thread.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.LoopAnimationHandler">
             <summary>
             Handles simple looped animations.
            
             Also makes sure that game speed is properly handled.
             </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.MbBasedEntitiesRenderer">
            <summary>
            Default renderer that renders entities using MBs.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Entities.MbBasedEntitiesRenderer.m_parentGo">
            <summary>
            Parent GO that has all the entities to avoid mess in the scene root.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Entities.MbBasedEntitiesRenderer.m_entities">
            <summary>
            Maps <see cref="T:Mafi.Core.Entities.IRenderedEntity"/> to its <see cref="T:Mafi.Unity.Entities.EntityMb"/> that is responsible for control of the entity. Keep
            in mind that entity's <see cref="T:UnityEngine.GameObject"/> might have more <see cref="T:UnityEngine.MonoBehaviour"/> attached.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Entities.MbBasedEntitiesRenderer.m_goToEntity">
            <summary>
            Maps <see cref="T:UnityEngine.GameObject"/> to <see cref="T:Mafi.Core.Entities.IEntity"/>.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.IProtoModelFactory`1">
            <summary>
            Common interface for all factories of models (represented as <see cref="T:UnityEngine.GameObject"/>) that use just proto for
            creation of the model. Those are many static entities or ports. But transports are not the case.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.ProtoModelFactory">
            <summary>
            Convenience class for creation of <see cref="T:UnityEngine.GameObject"/> for entities created just by <see
            cref="T:Mafi.Core.Entities.EntityProto"/>. This class also handles model pooling.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Entities.ProtoModelFactory.ReturnModelOf``1(``0,UnityEngine.GameObject@)">
            <summary>
            Returns given model to the cache. It is responsibility of the caller to make sure that the model is in
            exactly the same condition as the one received from <see cref="M:Mafi.Unity.Entities.ProtoModelFactory.CreateModelFor``1(``0)"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Entities.ProtoModelFactory.CreateModelWithPortsFor``1(``0)">
            <summary>
            Creates model of <see cref="T:Mafi.Core.Entities.Static.Layout.LayoutEntity"/> that includes port models.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Entities.Static.ConstructionCubesRenderer.CubeInstanceData.TransitionStartTime">
            <summary>
            Time (based on <see cref="P:Mafi.Core.GameTime.TimeSinceLoadMs"/>) at which the transition started.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Entities.Static.ConstructionCubesRenderer.CubesForEntityData.SyncUpdate(Mafi.Core.GameTime)">
            <summary>
            Returns whether this instance should be removed and destroyed.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.Static.FarmMb.DetailInstanceData">
            <summary>
            Per-instance data that is passed to GPU. Layout of this struct must match the `MeshProperties` struct
            in the shader.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.Static.InstancedChunkBasedLayoutEntitiesRenderer">
            <summary>
            Renders static entities using chung-based instanced rendering.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.Static.InstancedChunkBasedLayoutEntitiesRenderer.EntityProtoRenderingData">
            <summary>
            Handles rendering of a set of entities based on its proto. Each entity proto has a separate instance.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.Static.LayoutEntityMbFactory">
            <summary>
            Default MB factory for all entities of base type <see cref="T:Mafi.Core.Entities.Static.Layout.LayoutEntity"/>. This serves as a fall-back to all
            entities that do not have their own custom factories.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.Static.LayoutEntityModelFactory">
            <summary>
            Default factory that fetches models for layout entities based on their prototype. It can also generate a model
            from the layout that is used as a backup in case of missing models or as model creation blueprint.
            </summary>
            <remarks>Use <see cref="T:Mafi.Unity.Entities.ProtoModelFactory"/> to invoke this factory.</remarks>
        </member>
        <member name="M:Mafi.Unity.Entities.Static.LayoutEntityModelFactory.Create(Mafi.Core.Entities.Static.Layout.LayoutEntityProto)">
            <summary>
            Creates a new model based on prefab from the asset DB and makes sure it has a collider attached. If no model
            is found a generated layout mesh is returned.
            </summary>
            <remarks>Implementation of <see cref="T:Mafi.IFactory`2"/>.</remarks>
        </member>
        <member name="M:Mafi.Unity.Entities.Static.LayoutEntityModelFactory.GenerateLayoutMesh(Mafi.Core.Entities.Static.Layout.LayoutEntityProto,System.Boolean)">
            <summary>
            Creates layout mesh from given <paramref name="layoutEntityProto"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Entities.Static.LayoutEntityModelFactory.AppendLayoutMesh(Mafi.Core.Entities.Static.Layout.EntityLayout,Mafi.Unity.MeshBuilder)">
            <summary>
            Appends layout mesh generated from given <paramref name="layout"/> to given <paramref name="builder"/>.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Entities.Static.SettlementWasteModuleMb">
            <summary>
            IMPORTANT: This is a strong copy-pasta of LooseStorageMb
            </summary>
        </member>
        <member name="M:Mafi.Unity.Entities.Static.SettlementWasteModuleMb.Mafi#Unity#Entities#IEntityMbWithSyncUpdate#SyncUpdate(Mafi.Core.GameTime)">
            <summary>
            IMPORTANT: This is a strong copy-pasta of LooseStorageMb
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectExtensions.DestroyAllCollidersImmediate(UnityEngine.GameObject)">
            <summary>
            Destroys all colliders from this Game Object. This method is not recursive. Not thread safe!
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectExtensions.Destroy(UnityEngine.GameObject)">
            <summary>
            Destroys this Game Object. Keep in mind that actual destruction is delayed, so for example cloning the GO
            after destroying a component will still have the deleted component.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectExtensions.DestroyImmediate(UnityEngine.GameObject)">
            <summary>
            Destroys this Game Object immediately.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectExtensions.IsNullOrDestroyed(UnityEngine.GameObject)">
            <summary>
            Checks if a GameObject has been destroyed or marked as destroyed.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectExtensions.GetAllChildren(UnityEngine.GameObject,System.Predicate{UnityEngine.GameObject},Mafi.Collections.Lyst{UnityEngine.GameObject})">
            <summary>
            Recursively gets all children that satisfies given predicate.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectExtensions.SetLayerRecursively(UnityEngine.GameObject,System.Int32)">
            <summary>
            Sets layer of this <see cref="T:UnityEngine.GameObject"/> and all its children.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectExtensions.TryFindNameInHierarchy(UnityEngine.GameObject,System.String,UnityEngine.GameObject@)">
            <summary>
            Tries to find a child by name recursively.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectExtensions.TryFindChild(UnityEngine.GameObject,System.String,UnityEngine.GameObject@)">
            <summary>
            Tries to find a child by name. Does not perform a recursive descend, but if the given name contains
            a '/' character it will access the Transform in the hierarchy like a path name.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectExtensions.TryFindChild(UnityEngine.Transform,System.String,UnityEngine.Transform@)">
            <summary>
            Tries to find a child by name. Does not perform a recursive descend, but if the given name contains
            a '/' character it will access the Transform in the hierarchy like a path name.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectExtensions.InstantiateMaterials(UnityEngine.GameObject,System.Predicate{UnityEngine.MeshRenderer},Mafi.Collections.Lyst{UnityEngine.Material})">
            <summary>
            Makes a copy of each unique material on this object. If one material is used multiple times, there will be
            only once copy which will be also used multiple times.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectExtensions.CombineMeshesWithSameMaterialRecursively(UnityEngine.GameObject,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Traverses all children of this GO and combines all meshes based on their material.
            All children will be then deleted.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutTo(UnityEngine.GameObject,UnityEngine.GameObject,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills the given parent with this object.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutToLeftOf(UnityEngine.GameObject,UnityEngine.GameObject,System.Single,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills the given parent with this object vertically and aligns it to the left.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutToRightOf(UnityEngine.GameObject,UnityEngine.GameObject,System.Single,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills the given parent with this object vertically and aligns it to the right.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutToCenterOf(UnityEngine.GameObject,UnityEngine.GameObject,System.Single,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills the given parent with this object vertically and aligns it to the center.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutToTopOf(UnityEngine.GameObject,UnityEngine.GameObject,System.Single,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills the given parent with this object horizontally and aligns it to the top.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutToBottomOf(UnityEngine.GameObject,UnityEngine.GameObject,System.Single,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills the given parent with this object horizontally and aligns it to the bottom.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutToMiddleOf(UnityEngine.GameObject,UnityEngine.GameObject,System.Single,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills the given parent with this object horizontally and aligns it to the middle.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutToLeftTopOf(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the left top corner of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutToLeftMiddleOf(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the left middle corner of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutToLeftBottomOf(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the left bottom corner of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutToRightTopOf(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the right top corner of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutToRightMiddleOf(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the right middle corner of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutToRightBottomOf(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the right bottom corner of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutToCenterTopOf(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the center top part of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutToCenterMiddleOf(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the center and middle of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutToCenterBottomOf(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the center bottom part of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectUiExtensions.PutRelativeTo(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector2,Mafi.Unity.UiFramework.HorizontalPosition,Mafi.Unity.UiFramework.VerticalPosition,Mafi.Unity.UiFramework.Offset)">
            <summary>
            See <see
            cref="M:Mafi.Unity.UiFramework.LayoutHelper.PositionRelative(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector2,Mafi.Unity.UiFramework.HorizontalPosition,Mafi.Unity.UiFramework.VerticalPosition,Mafi.Unity.UiFramework.Offset)"/>
            </summary>
        </member>
        <member name="M:Mafi.Unity.MonoBehaviourExtensions.IsNullOrDestroyed(UnityEngine.MonoBehaviour)">
            <summary>
            Checks if a MonoBehaviour (component) has been destroyed or marked as destroyed.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToVector3(Mafi.Vector3f)">
            <summary>
            Converts this Mafi vector to Unity vector.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToVector3(Mafi.Vector3i)">
            <summary>
            Converts this Mafi vector to Unity vector.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.Orthogonal(UnityEngine.Vector3)">
            <summary>
            Returns an (arbitrary) orthogonal vector. Returned vector is not normalized.
            </summary>
            <remarks>
            Returned vector is a cross product with an axis corresponding to the smallest component of the vector.
            </remarks>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToVector3f(UnityEngine.Vector3)">
            <summary>
            Converts this Unity vector to Mafi vector.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToVector4f(UnityEngine.Vector4)">
            <summary>
            Converts this Unity vector to Mafi vector.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToVector4(Mafi.Vector4f)">
            <summary>
            Converts this Mafi vector to Unity vector.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToTile3f(UnityEngine.Vector3)">
            <summary>
            Converts this Unity vector to terrain-tile floating points vector.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToQuaternion4f(UnityEngine.Quaternion)">
            <summary>
            Converts this Unity quaternion to Mafi quaternion.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToColor(Mafi.ColorRgba)">
            <summary>
            Converts this Mafi color to Unity color.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToColor32(Mafi.ColorRgba)">
            <summary>
            Converts this Mafi color to Unity color 32.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToRay3f(UnityEngine.Ray)">
            <summary>
            Converts this Unity ray to Mafi ray and swaps Y and Z in the internal vectors.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToRay(Mafi.Ray3f)">
            <summary>
            Converts this Mafi ray to Unity ray and swaps Y and Z in the internal vectors.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToUnityUnits(Mafi.HeightTilesI)">
            <summary>
            Converts tiles height to unity units of height.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToUnityUnits(Mafi.HeightTilesF)">
            <summary>
            Converts tiles height to unity units of height.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToUnityUnits(Mafi.RelTile1i)">
            <summary>
            Converts tiles to unity units.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToUnityAngleDegrees(Mafi.AngleDegrees1f)">
            <summary>
            Converts angle to Unity angle.
            </summary>
            <remarks>
            Since our world uses right-handed system and Unity has left-handed system we have to inverse the sign of the
            angle.
            </remarks>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.ToUnityQuaternion(Mafi.Numerics.UnitQuaternion4f)">
            <summary>
            Converts quaternion to Unity representation.
            </summary>
            <remarks>
            WARNING: This conversion is total guess by me. It seems to work though. My intuition is that we have to swap
            Y and Z and also conjugate the quaternion (similarly as we had to negate 2D angles) due to RHS =} LHS
            conversion.
            </remarks>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.SmoothDampTo(System.Single,System.Single,System.Single)">
            <summary>
            Frame-rate-independent exponential damping.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.SmoothDampToUnscaledTime(System.Single,System.Single,System.Single)">
            <summary>
            Frame-rate-independent exponential damping with unscaled delta-time.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityExtensions.SmoothDampToUnscaledTime(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)">
            <summary>
            Frame-rate-independent exponential damping with unscaled delta-time.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Factory.Transports.TransportedProductDefaultModelFactory">
            <summary>
            Default transported product factory that serves as a fall-back when no specialized factories are defines.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Factory.Transports.ITransportedProductModelFactory`1">
            <summary>
            Common interface for all transported product factories. Given a product prototype returns a game object with
            attached 3D model.
            </summary>
            <typeparam name="T">Type of product prototype handled by the factory.</typeparam>
        </member>
        <member name="T:Mafi.Unity.Factory.Transports.TransportedProductModelFactory">
            <summary>
            Convenience class for transported products model retrieval. This class does not perform any pooling and always
            calls the factory. Each product may have multiple meshes returned randomly.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Factory.Transports.TransportedProductModelFactory.CreateModelFor(Mafi.Core.Products.ProductProto)">
            <summary>
            Returns model of transported product for given proto.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Factory.Transports.TransportedProductsRenderer">
             <summary>
            	Handles rendering for transported products.
             </summary>
             <remarks>
             Notes from transport optimization (Change-Id: I9988f39e22133491718cbe14b8135a69ac022232)
            
             Transported products are now rendered using efficient GPU-instancing that renders all products of one product
             type in one draw-call.
              - Preparation of data for the rendering is done on sim thread, but only when needed. If transport is
                stationary, update is skipped.
              - Transported product data for GPU shader are packed to 4 x 4 bytes struct (per product) to optimize memory
                access and have all 4B floats properly aligned.
              - Transported products shader has two variants: static and dynamic. Static renders products without
                movement and needs half of the data compared to dynamic variant, and avoids any position/rotation
                interpolation computation. Dynamic variant performs smooth interpolation between two sim steps for
                frame-rate independent smooth movement with no CPU interventions.
             </remarks>
        </member>
        <member name="T:Mafi.Unity.Factory.Transports.TransportedProductsRenderer.ProductInstanceData">
            <summary>
            Per-instance data that is passed to GPU. Layout of this struct must match the `MeshProperties` struct
            in the shader.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Factory.Transports.TransportedProductsRenderer.ProductInstanceData.RotationAndDataPacked">
            <summary>
            Stores yaw in the byte, pitch in the second byte scale in third, and tex ID in fourth.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Factory.Transports.TransportedProductsRenderer.ProductInstanceData.PackOffsets(Mafi.RelTile3f)">
            <summary>
            Packs offsets that must be within 0-0.5 tiles (0 - 1 meters).
            </summary>
        </member>
        <member name="T:Mafi.Unity.Factory.Transports.TransportedProductsRenderer.ProductInstanceDataPair">
            <summary>
            Per-instance data that is passed to GPU. Layout of this struct must match the `MeshProperties` struct
            in the shader.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Factory.Transports.TransportFlowIndicatorMb.SetFlowRate(Mafi.RelTile1f,Mafi.ColorRgba)">
            <summary>
            Sets flow rate (invoked on sim thread). This won't be applied until Sync.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Factory.Transports.TransportMb.m_waypointsConverted">
            <summary>
            Pre-computed positions and rotations of waypoints.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Factory.Transports.TransportMbFactory">
            <summary>
            Handles creation of MBs for transports.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Factory.Transports.TransportModelFactory">
            <summary>
            Procedural generation of transport models.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Factory.Transports.TransportModelFactory.CreateModel(Mafi.Core.Factory.Transports.TransportProto,Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Tile3i},System.String@,System.Nullable{Mafi.RelTile3i},System.Nullable{Mafi.RelTile3i},System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates transport model with given pivots and start/end directions.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Factory.Transports.TransportModelFactory.CreateModel(Mafi.Core.Factory.Transports.TransportTrajectory,System.Boolean,System.Boolean,System.Boolean,UnityEngine.Material,System.Nullable{UnityEngine.Vector3})">
            <summary>
            Creates transport model based on given trajectory.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Factory.Transports.TransportModelFactory.addColliders(UnityEngine.GameObject,Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Tile3i},UnityEngine.Vector3)">
            <summary>
            Adds colliders to given transport GO based on its pivots.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Factory.Transports.TransportModelFactory.createMesh(Mafi.Curves.CubicBezierCurve3f,Mafi.Core.Factory.Transports.TransportProto,UnityEngine.Vector3,Mafi.Unity.MeshBuilder,Mafi.Unity.MeshBuilder,Mafi.Collections.ReadonlyCollections.IIndexable{Mafi.Core.Factory.Transports.TransportFlowIndicatorPose})">
            <summary>
            Creates transport mesh for given curve.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Factory.Transports.TransportModelFactory.addFlowIndicators(Mafi.Collections.ReadonlyCollections.IIndexable{Mafi.Core.Factory.Transports.TransportFlowIndicatorPose},Mafi.Core.Factory.Transports.TransportProto,UnityEngine.Vector3,UnityEngine.GameObject)">
            <summary>
            Adds flow indicators MBs to given transport GO based on the trajectory information.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Factory.Transports.TransportPillarsRenderer.ObjectInstanceData">
            <summary>
            Per-instance data that is passed to GPU. Layout of this struct must match the `InstanceData` struct
            in the `TerrainDesignationInstanced` shader.
            </summary>
        </member>
        <member name="T:Mafi.Unity.GamePlayScene">
            <summary>
            Represent the main game play.
            </summary>
        </member>
        <member name="T:Mafi.Unity.GlobalPlayerPrefs">
            <summary>
            A wrapper around <see cref="T:UnityEngine.PlayerPrefs"/> for storing player preferences.
            On Windows, PlayerPrefs are stored in 'HKCU\Software\ExampleCompanyName\ExampleProductName' key.
            </summary>
        </member>
        <member name="T:Mafi.Unity.IBuildable">
            <summary>
            Marks class, usually <see cref="T:UnityEngine.MonoBehaviour"/>, as buildable. If you plan on having buildable MB consider
            deriving from <see cref="T:Mafi.Unity.BuildableMb"/>.
            </summary>
        </member>
        <member name="T:Mafi.Unity.MbUpdatePackage">
            <summary>
            This class can be used to store and apply update for <see cref="T:UnityEngine.MonoBehaviour"/>. This is useful for caching
            updates of for building mesh update on the simulation thread and updating it in the main thread.
            </summary>
        </member>
        <member name="T:Mafi.Unity.IGameScene">
            <summary>
            Represents the main scene which can be main game or main menu.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.AreaTool.AreaSelectionTool">
            <summary>
            Tool for click and drag using mouse to select a terrain area (rectangular).
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.AreaTool.AreaSelectionTool.m_areaPreprocessor">
            <summary>
            Used to transform area directly selected by user into final selected area, if specified. Can be used to
            limit area size or align the area to a specific grid.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.AreaTool.AreaSelectionTool.Activate(System.Boolean,System.Nullable{UnityEngine.Vector3},System.Func{Mafi.Core.Terrain.RectangleTerrainArea2i,Mafi.Core.Terrain.RectangleTerrainArea2i})">
            <summary>
            Activates the tool.
            </summary>
            <param name="additionMode">Whether the we are adding area (green) or removing (red).</param>
        </member>
        <member name="T:Mafi.Unity.InputControl.BuildingsAssigner">
            <summary>
            Graphical tool to visualize and update assignments of static entities between each other.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.BuildingsAssigner.m_isForInputs">
            <summary>
            Whether this tool is currently assigning inputs to an output entity.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InputControl.CursorPickingManager.LastPickedGameObject">
            <summary>
            Last valid picked game object. This object may not be selected any more.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InputControl.CursorPickingManager.LastPickedCollider">
            <summary>
            Collider of last valid picked game object.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InputControl.CursorPickingManager.LastPickedCoord">
            <summary>
            Intersection coordinate of last valid picked game object.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.CursorPickingManager.PickEntity``1">
            <summary>
            Returns requested <see cref="T:Mafi.Core.Entities.Entity"/> of an object under the mouse cursor if any.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.CursorPickingManager.PickEntity``1(System.Predicate{``0})">
            <summary>
            Returns requested <see cref="T:Mafi.Core.Entities.Entity"/> of an object under the mouse cursor if any.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.CursorPickingManager.PickEntityAndSelect``1(Mafi.Unity.InputControl.CursorPickingManager.EntityPredicateReturningColor{``0})">
            <summary>
            Returns an instance of <see cref="T:Mafi.Core.Entities.IEntity"/> that is under the mouse cursor and fulfills given <paramref
            name="predicate"/>. Object is additionally highlighted by the color returned from the <paramref
            name="predicate"/> regardless of whether it was picked or not.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.CursorPickingManager.PickPortAndSelect``1(Mafi.Unity.InputControl.CursorPickingManager.PortPredicateReturningColor{``0})">
            <summary>
            Returns requested <see cref="T:Mafi.Core.Ports.Io.IoPort"/> of an object under the mouse cursor that fulfills given <paramref
            name="predicate"/> and selects (highlights) the object with returned color if true.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Cursors.Cursoor">
            <summary>
            Stateful cursor wrapper to simplify with cursors.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Cursors.Cursoor.ShowTemporary">
            <summary>
            Shows a cursor that will be displayed only temporarily and then a previous cursor that was active will be
            restored. Don't forget to call <see cref="M:Mafi.Unity.InputControl.Cursors.Cursoor.HideTemporary"/>. Currently used in free look mode.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Cursors.Cursoor.HideTemporary">
            <summary>
            Hides cursor that was displayed temporarily by <see cref="M:Mafi.Unity.InputControl.Cursors.Cursoor.ShowTemporary"/>.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Factory.EntitiesMenuController">
            <summary>
            Represents a menu of some set of entities. Typically registered via <see
            cref="T:Mafi.Unity.InputControl.Factory.ToolbarCategoriesMenuBuilder"/>.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Factory.EntitiesMenuController.m_isTransportBuildAllowed">
            <summary>
            Whether transport build tool is active while entity placing is not active.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Factory.EntitiesMenuController.deactivateCurrentTool(System.Boolean)">
            <summary>
            Deactivates current tool - transport building or entity placing - depending on which one is active.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Factory.EntitiesMenuController.SelectProto(Mafi.Core.Prototypes.Proto)">
            <summary>
            Called when user selects an item in the menu.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Factory.LayoutEntityPreview">
            <summary>
            This class helps to display a preview any layout entity.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Factory.LayoutEntityPreviewManager">
            <summary>
            Manages layout entity previews, manages creation, pooling, and updating.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Factory.TileValidityInstanceData">
            <summary>
            Per-instance data that is passed to GPU. Layout of this struct must match the `InstanceData` struct
            in the shader.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Factory.PathFindingTransportPreview">
            <summary>
            This class can compute and display a preview transport between to points. It uses pathfinder to find the best
            connection. It maintains internal state of currently displayed preview so the user can call
            <see cref="M:Mafi.Unity.InputControl.Factory.PathFindingTransportPreview.ShowStartPreview(Mafi.Unity.InputControl.Factory.PathFindingTransportPreview.PreviewRequest,Mafi.ThicknessTilesI,System.Nullable{Mafi.Direction90}@,Mafi.Option{Mafi.Core.Factory.Transports.TransportTrajectory}@,System.Boolean@)"/> and <see cref="M:Mafi.Unity.InputControl.Factory.PathFindingTransportPreview.ShowContinuationPreview(Mafi.Unity.InputControl.Factory.PathFindingTransportPreview.PreviewRequest,Mafi.ThicknessTilesI,Mafi.Option{Mafi.Core.Factory.Transports.TransportTrajectory}@,System.Boolean@,System.Boolean@)"/> every frame with desired locations
            and this class will handle all the caching.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Factory.PathFindingTransportPreview.MAX_PF_ITERS_PER_STEP">
            <summary>
            Maximum number of path-finding steps.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Factory.PortPreviewManager.GetPortPreviewPooled">
            <summary>
            Returns uninitialized port preview. Manager takes care of calling previews sim and sync events.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Factory.ToolbarCategoriesMenuBuilder">
            <summary>
            Registers itself to the UI initialization and creates toolbar items and menus (represented by <see
            cref="T:Mafi.Unity.InputControl.Factory.EntitiesMenuController"/>) for each existing <see cref="T:Mafi.Core.Entities.Static.Layout.ToolbarCategoryProto"/>.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Factory.TransportBuildController">
            <summary>
            User interface for transports laying.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Factory.TransportBuildController.m_shapeToTransportMap">
            <summary>
            This map is used to assign transport to shape. Since more transport types can have the same shape this map
            tracks last used transport for each shape.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Factory.TransportBuildController.SelectProto(Mafi.Core.Factory.Transports.TransportProto)">
            <summary>
            Called when user selects an item in the menu.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Factory.TransportBuildController.resetState(Mafi.Unity.InputControl.Factory.TransportBuildController.State)">
            <summary>
            Sets state to given value and clears preview and other state variables.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Factory.TransportBuildController.cancelTransport(System.Boolean)">
            <summary>
            Cancels selected prototype and resets state to <see cref="F:Mafi.Unity.InputControl.Factory.TransportBuildController.State.NoProtoSelected"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Factory.TransportBuildController.pickAndSelectConnectablePort(Mafi.Core.Ports.Io.IoPort@)">
            <summary>
            Tries to pick a potential port under the cursor that is connectible.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Factory.TransportPreviewVisualizer.clearAllPreviewsAndHighlights(System.Boolean)">
            <summary>
            Removes the transport preview from the scene.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Factory.TransportTrajectoryHighlighter">
            <summary>
            Helper class that enables highlighting transport trajectories.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Fleet.Battle.BattlePreviewController">
            <summary>
            This controller just create a testing fleet and show a battle. Great of debugging or
            experimenting. To enable this uncomment the line below and it will get added to the toolbar.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.GameMenu.LocalizationSettings">
            <summary>
            Manages the current language selected and applies it on game start.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Inspectors.Buildings.MineTowerInspector.m_highlightedArea">
            <summary>
            Area highlighted while <see cref="F:Mafi.Unity.InputControl.Inspectors.Buildings.MineTowerInspector.AreaEditInProgress"/> is true, but user is not selecting the new area using
            dragging yet.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Inspectors.Buildings.OceanAreasOverlayRenderer.ActivateForSingleEntity(Mafi.Core.Entities.Static.IStaticEntityWithReservedOcean)">
             <summary>
             Activates for single entity. Every call must be later followed by <see cref="M:Mafi.Unity.InputControl.Inspectors.Buildings.OceanAreasOverlayRenderer.DeactivateForSingleEntity(Mafi.Option{Mafi.Core.Entities.Static.IStaticEntityWithReservedOcean})"/>.
            
             Note that due to delayed entity addition, areas of newly added entities can be activated only after sync.
            
             Example:
            	<code>
             // To activate:
             m_oceanActivatedForEntity = m_oceanAreasRenderer.ActivateForSingleEntity(entity);
             ...
             // To deactivate:
             m_oceanActivatedForEntity = m_oceanAreasRenderer.DeactivateForSingleEntity(m_oceanActivatedForEntity);
             </code>
             </summary>
        </member>
        <member name="P:Mafi.Unity.InputControl.Inspectors.EntityInspector`2.SelectedEntity">
            <summary>
            Entity is null when this inspector is deactivated and not null when activated. We do not use option here
            because any time this class is used it has to be activated first.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Inspectors.EntityInspector`2.SetBuildingsAssigner(Mafi.Unity.InputControl.BuildingsAssigner)">
            <summary>
            If you have a buildings assigner set it here and its lifecycle and control will be managed for you.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Inspectors.EntityInspector`2.GetView">
            <summary>
            Called only once. Safe to create the window there.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Inspectors.EntityInspectorBase`1">
            <summary>
            Handles pausing, and title changes.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Inspectors.StaticEntityInspectorBase`1">
            <summary>
            Handles title construction, pausing, and title changes.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Inspectors.IEntityInspector`1">
            <summary>
            Generic entity inspector. This interface should be implemented by all inspectors.
            </summary>
            <typeparam name="T">Type of inspected entity</typeparam>
        </member>
        <member name="P:Mafi.Unity.InputControl.Inspectors.IEntityInspector`1.SelectedEntity">
            <summary>
            Entity is null when this inspector is deactivated and not null when activated. We do not use option here
            because any time this class is used it has to be activated first.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Inspectors.IEntityInspector">
            <summary>
            Non-generic common interface for all entity inspectors.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Inspectors.IEntityInspector.Activate">
            <summary>
            Called when this input controller is activated by the player. Invoked on the main thread.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Inspectors.IEntityInspector.Deactivate">
            <summary>
            Called when this input controller is deactivated by the player. Invoked on the main thread.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Inspectors.IEntityInspector.SyncUpdate(Mafi.Core.GameTime)">
            <summary>
            Called for an active controller.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Inspectors.IEntityInspector.RenderUpdate(Mafi.Core.GameTime)">
            <summary>
            Called for an active controller.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Inspectors.IEntityInspector.InputUpdate(Mafi.Core.Input.IInputScheduler)">
            <summary>
            Input update for this inspector.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Inspectors.IEntityInspectorFactory`1">
            <summary>
            Inspector factory interface that forces every inspector implement method that initializes them with entity. We
            use factory interface to allow hierarchical resolving of inspectors.
            </summary>
            <typeparam name="T">Type of inspected entity</typeparam>
        </member>
        <member name="F:Mafi.Unity.InputControl.Inspectors.InspectorController.m_isHoverSuppressed">
            <summary>
            Whether we should prevent showing inspector cursor when an inspectable entity is hovered.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Inspectors.ProductsFilterEditor">
            <summary>
            A filtered products editor that is especially designed to work with inspector windows.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Inspectors.SingleProductFilterEditor">
            <summary>
            A filtered products editor that is especially designed to work with inspector windows.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Mafi.Unity.InputControl.KeyBindings" -->
        <member name="T:Mafi.Unity.InputControl.ShortcutsManager">
            <summary>
            Note that this map is not complete. There can be another shortcuts defined in mods (e.g. base mode).
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.ShortcutsManager.IsUp(Mafi.Unity.InputControl.KeyBindings)">
            <summary>
            Whether key was just released in last frame.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.ShortcutsManager.IsDown(Mafi.Unity.InputControl.KeyBindings)">
            <summary>
            Whether key was just pressed down in last frame.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.ShortcutsManager.IsOn(Mafi.Unity.InputControl.KeyBindings)">
            <summary>
            Whether key is being held down.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.ShortcutsManager.IsInFreeLookMode">
            <summary>
            Whether the player is in the free look mode. This does not necessary mean that mouse input should be
            processed yet. Equivalent to Alt pressed.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.ShortcutsManager.IsInActiveFreeLookMode">
            <summary>
            Whether the camera can be rotated base on the player's mouse movement. Equivalent to Alt + left mouse
            pressed.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mafi.Unity.InputControl.ShortcutsStorage">
            <summary>
            Bridge between ShortcutsManager and static stuff
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.LayoutEntityPlacing.LastUsedStaticEntityTransform">
            <summary>
            Contains the TileTransform that was used on previous entity placing, using this class it is shared among all
            instantiated <see cref="!:StaticEntityPlacer"/>s. <see cref="!:StaticEntityPlacer"/> sets the transform when
            placing an entity and reads it again when it initializes entity placing.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.LayoutEntityPlacing.LayoutEntitySlotPlacerHelper.SetPosition(Mafi.Tile3i)">
            <summary>
            Sets the position and returns true if the position has changed.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.LayoutEntityPlacing.StaticEntityMassPlacer">
            <summary>
            A tool to place a <see cref="T:Mafi.Core.Entities.Static.Layout.LayoutEntity"/> on the ground.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.LayoutEntityPlacing.StaticEntityMassPlacer.SetEntitiesToClone(Mafi.Collections.ReadonlyCollections.IIndexable{Mafi.Core.Entities.Static.IStaticEntity},Mafi.Collections.ReadonlyCollections.IIndexable{Mafi.Core.Factory.Transports.SubTransport},System.Boolean)">
            <summary>
            Starts preview with a set of entities to clone from.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Logistics.JobStatsView">
            <summary>
            Displays a grid of products and quantities.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Messages.StaticTutorialProgressCleaner">
            <summary>
            Only use from main menu when resolver is no available.
            Game menu should use non-static version.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Messages.StaticTutorialProgressCleaner.ResetTutorialProgress">
            <summary>
            WARNING: Can be only used from the main thread.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Messages.TutorialProgressTracker.markTutorialAsRead(Mafi.Core.Messages.MessageProto)">
            <summary>
            WARNING: Can be only used from the main thread.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Messages.TutorialProgressTracker.ResetTutorialProgress">
            <summary>
            WARNING: Can be only used from the main thread.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Notifications.NotificationsEntityIconManager">
            <summary>
            Handles displaying icons from notifications above entities.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Notifications.NotificationsViewController.MS_BETWEEN_ERROR_SOUNDS">
            <summary>
            Minimal delay between error sounds.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Notifications.StaticEntityPauseIconManager">
            <summary>
            Handles displaying pause icon whenever static entity is paused.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InputControl.Research.ResearchController.NoLabAvailable">
            <summary>
            True if there isn't any enabled research lab in the game. This is updated only when the window is opened
            since during the time it is opened the player has no option to alter that.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Research.ResearchFinishedMessageWindowView.PositionToTopMiddle(System.Nullable{Mafi.Unity.UiFramework.Offset},System.Boolean)">
            <summary>
            Positions the window to the corner of the screen while setting it the given dimensions.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Research.SidePanel.RecipesView">
            <summary>
            Displays recipes that are unlocked by a research.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Research.SidePanel.ResearchSidePanel">
            <summary>
            The side panel that displays a research node details.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.ResVis.ResVisBarsMb">
            <summary>
            Represents all resource bars of an individual products.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.ResVis.ResVisBarsRenderer.m_productsVisibility">
            <summary>
            Visibility counters for each products. If a counter for a given product is positive, the product is visible
            otherwise it is not.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.ResVis.ResVisBarsRenderer.m_productsVisibilitySum">
            <summary>
            Sum of all visibility counters in <see cref="F:Mafi.Unity.InputControl.ResVis.ResVisBarsRenderer.m_productsVisibility"/> for quick checking whether any product
            is visible.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InputControl.ResVis.ResVisBarsRenderer.IsActive">
            <summary>
            Whether the displaying is currently active.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Statistics.StatisticsView.UpdatePeriod">
            <summary>
            How often should be an active statistics panel updated with new values. Having reasonable values improves
            performance for large tables of data and also reduces visual aggresivnes of the updates.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Statistics.StatsChartView.m_adapters">
            <summary>
            How many (last) years are shown in the chart.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Mafi.Unity.InputControl.Statistics.StatsTestChartTab" -->
        <member name="T:Mafi.Unity.InputControl.TerrainCursor">
            <summary>
            Provides mouse position projected on the terrain.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.TerrainCursor.TryComputeCurrentPosition(Mafi.Tile3f@)">
            <summary>
            This performs non-cached computation but the cursor does not need to be activated.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.TerrainCursor.TryComputeTerrainPosition(UnityEngine.Vector3,Mafi.Tile3f@)">
            <summary>
            This performs non-cached computation but the cursor does not need to be activated.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InputControl.TerrainCursor.RelativeHeightTilesF">
            <summary>
            Gets or sets relative cursor height.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InputControl.TerrainCursor.RelativeHeight">
            <summary>
            Gets or sets relative cursor height in tiles.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InputControl.TerrainCursor.HasValue">
            <summary>
            Whether this cursor has valid value. If false is returned the mouse is currently not hovering over terrain..
            </summary>
        </member>
        <member name="P:Mafi.Unity.InputControl.TerrainCursor.Tile3f">
            <summary>
            Current global discrete coord of a mouse position projected on the terrain. Only valid if <see
            cref="P:Mafi.Unity.InputControl.TerrainCursor.HasValue"/> is true.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InputControl.TerrainCursor.Tile2f">
            <summary>
            Current 2D global discrete coord of a mouse position projected on the terrain. Only valid if <see
            cref="P:Mafi.Unity.InputControl.TerrainCursor.HasValue"/> is true.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InputControl.TerrainCursor.Tile">
            <summary>
            Current hovered terrain tile.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Toolbar.FloatingEntityIconPopup">
            <summary>
            Popup that shows icon of entity which configuration is being copied.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Toolbar.FloatingEntityIconPopup.m_wasVisible">
            <summary>
            Whether the popup was visible before we entered into Free-look mode. If yes it needs to be restored after we
            leave that mode.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Toolbar.FloatingPricePopup">
            <summary>
            Tiny popup that shows money value next to the cursor. Used for instance to show price of transport that is being
            build.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Toolbar.FloatingUpointsCostPopup">
            <summary>
            Popup that shows icon of entity which configuration is being copied.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Toolbar.FloatingUpointsCostPopup.m_wasVisible">
            <summary>
            Whether the popup was visible before we entered into Free-look mode. If yes it needs to be restored after we
            leave that mode.
            </summary>
        </member>
        <member name="E:Mafi.Unity.InputControl.Toolbar.IToolbarItemInputController.VisibilityChanged">
            <summary>
            Invoked when <see cref="P:Mafi.Unity.InputControl.Toolbar.IToolbarItemInputController.IsVisible"/> changes. The event can be invoked from any thread.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InputControl.Toolbar.IToolbarItemInputController.IsVisible">
            <summary>
            Whether the controller can be activated and should be displayed in the menu.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Toolbar.MenuPopup.EntityCostProvider">
            <summary>
            Only to be used in UI (otherwise construction would need to filter out unity).
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Toolbar.MenuPopup.IPopupProvider">
            <summary>
            Populates the popup view with item's data. This allows to extend popups with new item types.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InputControl.Toolbar.MenuPopup.IPopupProvider.SupportedType">
            <summary>
            Type of item supported by this provider.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Toolbar.MenuPopup.IPopupProvider.PopulateView(Mafi.Unity.InputControl.Toolbar.MenuPopup.MenuPopupView,System.Object,System.Boolean)">
            <summary>
            Populates the given popup view with the given item. The item's type must be assignable to <see
            cref="P:Mafi.Unity.InputControl.Toolbar.MenuPopup.IPopupProvider.SupportedType"/>.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Toolbar.MenuPopup.MenuPopupController.MS_BEFORE_HIDE">
            <summary>
            How many milliseconds it should take before the popup gets hidden after the player hovers out of its item.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Toolbar.MenuPopup.MenuPopupController.MS_BEFORE_SHOW">
            <summary>
            How many milliseconds it should take before the popup gets shown after the player hovers over its item.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Toolbar.MenuPopup.MenuPopupController.m_bottomOffset">
            <summary>
            Offset of the popup from the bottom of the screen.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Toolbar.MenuPopup.MenuPopupController.m_hidingStart">
            <summary>
            Time in ms when hiding was started. 0 if it should be started.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Toolbar.MenuPopup.MenuPopupController.m_showStart">
            <summary>
            Time in ms when show was started. 0 if it should be started.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Toolbar.MenuPopup.MenuPopupView.Reset">
            <summary>
            Hides all views used by previous item. Call this before you start populate this view with new item. Don't
            forget to call <see cref="M:Mafi.Unity.InputControl.Toolbar.MenuPopup.MenuPopupView.SetupFinished"/> after you are done.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Toolbar.MenuPopup.MenuPopupView.SetupFinished">
            <summary>
            Finalizes the view after item was set. Call this when you are done with the setup. This will run final layout
            measurements.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Mafi.Unity.InputControl.Toolbar.MenuPopup.PricePanelCompact" -->
        <member name="F:Mafi.Unity.InputControl.Toolbar.MenuPopup.ResearchPopupController.m_hidingStart">
            <summary>
            Time in ms when hiding was started. 0 if it should be started.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Toolbar.MenuPopup.ResearchPopupController.m_showStart">
            <summary>
            Time in ms when show was started. 0 if it should be started.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Toolbar.ToolbarController.AddMainMenuButton(System.String,Mafi.Unity.InputControl.Toolbar.IToolbarItemInputController,System.String,System.Single,System.Func{Mafi.Unity.InputControl.ShortcutsManager,Mafi.Unity.InputControl.KeyBindings})">
            <summary>
            Adds button to the main menu - the middle section of Toolbar.
            </summary>
            <remarks>
            Main menu is automatically organized to sections. Sections are automatically split by dividers. Last two
            decimal digits (00-99) of the order specify order with the section and any higher digits specify the section
            number. For example order 205 is order 5 in section 2.
            </remarks>
        </member>
        <member name="M:Mafi.Unity.InputControl.Toolbar.ToolbarController.AddLeftMenuButton(System.String,Mafi.Unity.InputControl.Toolbar.IToolbarItemInputController,System.String,System.Single,System.Func{Mafi.Unity.InputControl.ShortcutsManager,Mafi.Unity.InputControl.KeyBindings},System.Nullable{Mafi.Unity.UiFramework.Components.BtnStyle},System.Nullable{Mafi.Unity.UiFramework.Components.BtnStyle},System.Nullable{Mafi.Localization.LocStrFormatted})">
            <summary>
            Same as <see cref="M:Mafi.Unity.InputControl.Toolbar.ToolbarController.AddMainMenuButton(System.String,Mafi.Unity.InputControl.Toolbar.IToolbarItemInputController,System.String,System.Single,System.Func{Mafi.Unity.InputControl.ShortcutsManager,Mafi.Unity.InputControl.KeyBindings})"/> but adds the button to the left menu.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Toolbar.ToolbarController.AddRightMenuButton(System.String,Mafi.Unity.InputControl.Toolbar.IToolbarItemInputController,System.String,System.Single)">
            <summary>
            Same as <see cref="M:Mafi.Unity.InputControl.Toolbar.ToolbarController.AddMainMenuButton(System.String,Mafi.Unity.InputControl.Toolbar.IToolbarItemInputController,System.String,System.Single,System.Func{Mafi.Unity.InputControl.ShortcutsManager,Mafi.Unity.InputControl.KeyBindings})"/> but adds the button to the right menu.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Toolbar.ToolbarController.ButtonsStrip.m_dividers">
            <summary>
            List of added dividers for sections.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Toolbar.ToolbarController.ButtonsStrip.AddButton(System.String,Mafi.Unity.InputControl.Toolbar.IToolbarItemInputController,System.String,System.Single,System.Func{Mafi.Unity.InputControl.ShortcutsManager,Mafi.Unity.InputControl.KeyBindings},System.Nullable{Mafi.Unity.UiFramework.Components.BtnStyle},System.Nullable{Mafi.Unity.UiFramework.Components.BtnStyle})">
            <summary>
            Adds button to the strip.
            </summary>
            <remarks>
            Strip is automatically organized to sections. Sections are automatically split by dividers. Last two
            decimal digits (00-99) of the order specify order with the section and any higher digits specify the
            section number. For example order 205 is order 5 in section 2.
            </remarks>
        </member>
        <member name="T:Mafi.Unity.InputControl.Toolbar.ToolbarOrder">
            <summary>
            Helper class to simplify ordering of the main menu.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Tools.BaseEntityCursorInputController`1.m_toToggle">
            <summary>
            Entity that was detected on mouse down. If the same entity is detected on mouse-up it will be (un)paused.
            Otherwise it will not be (un)paused.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Tools.BaseEntityCursorInputController`1.m_pendingCmds">
            <summary>
            Commands that are currently in progress.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.Tools.BaseEntityCursorInputController`1.handleCurrentCommand">
            <summary>
            Handles logic of processing current pause command. Returns true if current command was processed.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Tools.CloneConfigPickerInputController">
            <summary>
            Tool for cloning settings of entities.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Tools.CopyEntityInputControllerBase">
            <summary>
            Base class for copy / cut / pasting.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Mafi.Unity.InputControl.Tools.CopyPasteEntityInputController" -->
        <!-- Badly formed XML comment ignored for member "T:Mafi.Unity.InputControl.Tools.CutPasteEntityInputController" -->
        <member name="T:Mafi.Unity.InputControl.Tools.DeleteEntityInputController">
            <summary>
            Tool for destroying/selling static entities.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.Tools.DeleteEntityInputController.m_pendingCommands">
            <summary>
            Commands that are currently in progress.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.Tools.PauseEntityInputController">
            <summary>
            Tool for pausing/unpasing of pausable entities.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Mafi.Unity.InputControl.Tools.QuickEntityTransformInputController" -->
        <member name="T:Mafi.Unity.InputControl.Tools.UpointsToolInputController">
            <summary>
            Tool to smartly apply unity on entities - boost, quick delivery / remove.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.TopStatusBar.GameSpeedUi.createButtonsPanel(Mafi.Unity.UserInterface.UiBuilder)">
            <summary>
            Builds button that goes to the bottom menu strip of the main menu.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.TopStatusBar.StatusBar">
            <summary>
            UI stripe at top of the game window. Mostly displays summary of player's resources.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.TopStatusBar.StatusBar.placeRightItems(System.Boolean)">
            <summary>
            Places items on the right side of the bar.
            </summary>
            <returns>Width used by items on the right and their delimiters (middle items cannot use it).</returns>
        </member>
        <member name="M:Mafi.Unity.InputControl.TopStatusBar.StatusBar.placeMiddleItems(System.Single,System.Boolean)">
            <summary>
            Places items in the middle of the bar.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.TopStatusBar.StatusBar.AddElementToMiddle(Mafi.Unity.UiFramework.IUiElement,System.Single,System.Boolean)">
            <summary>
            Adds element to the right section of the status bar.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.TopStatusBar.StatusBar.AddElementToRight(Mafi.Unity.UiFramework.IUiElement,System.Single,System.Boolean)">
            <summary>
            Adds element to the right section of the status bar.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.TopStatusBar.StatusBar.OnItemChanged">
            <summary>
            Call when item has been resized of its visibility has been changed
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.TopStatusBar.StatusBar.UpdateElements">
            <summary>
            Call after element is shown/hidden/changes width (ff it doesn't implement <see cref="T:Mafi.Unity.UiFramework.IDynamicSizeElement"/>).
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.IUnityInputController.Activate">
            <summary>
            Called when this input controller is activated by the player. Invoked on the main thread.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.IUnityInputController.Deactivate">
            <summary>
            Called when this input controller is deactivated by the player. Invoked on the main thread.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InputControl.IUnityInputController.InputUpdate(Mafi.Core.Input.IInputScheduler)">
            <summary>
            Called every frame when the controller is active. Invoked on the main thread. Returns whether input was
            processed and no other controllers should be updated.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InputControl.ControllerGroup">
            <summary>
            Controllers from the same group don't make sense to be active both at the same time..
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.ControllerConfig.IgnoreEscapeKey">
            <summary>
            Returns whether the controller should stay open even when player presses the escape key.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.ControllerConfig.DeactivateOnOtherControllerActive">
            <summary>
            Typically used for tools. We don't want to show a cursor with bulldozer while presenting research window.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.ControllerConfig.DeactivateOnNonUiClick">
            <summary>
            Whether the controller should be deactivated when the player clicks out of the UI. This is useful for pop-ups
            that can be closed very easily.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.ControllerConfig.AllowInspectorCursor">
            <summary>
            Whether the inspector cursor (and functionality) can be used while this controller is active. This does not
            mean that the inspector window will be present together with this controller.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.ControllerConfig.BlockCameraControl">
            <summary>
            Block camera control e.g. movements keys when this controller is active.
            TODO: Kinda hack as our camera control is not controlled by UnityInputManager and runs always
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.ControllerConfig.PreventSpeedControl">
            <summary>
            Whether game speed control should be disabled while this controller is active.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.UnityInputManager.m_controllers">
            <summary>
            Currently active controllers
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.UnityInputManager.m_controllersPendingActivation">
            <summary>
            Helper array to collect deactivated controllers.
            </summary>
        </member>
        <member name="F:Mafi.Unity.InputControl.UnityInputManager.m_globalShortcuts">
            <summary>
            All registered global shortcuts.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mafi.Unity.InputControl.World.WorldMapController.tryRegisterToUpdates" -->
        <member name="T:Mafi.Unity.InputControl.World.WorldMapEditorUi">
             <summary>
             Simple world map editor.
            
             * Usage
             * New node: [Alt] + [LMB]
             * Move node: arrows, use [Shift], [Ctrl], and [Alt] for distance multipliers.
             * Remove node: Select it, then [Alt] + [RMB] (this removes all of its connections too).
             * Add/remove connection: Select start node, then [Ctrl] + [LMB] on goal node.
             </summary>
        </member>
        <member name="T:Mafi.Unity.InstancedRendering.InstancedMeshesRenderer`1">
            <summary>
            Efficient rendering of large number of meshes using instanced with LOD support.
            This class can be also registered for custom highlighting via the <see cref="T:Mafi.Unity.ICustomHighlightsRenderer"/> interface.
            </summary>
            <typeparam name="TInstanceData">Data passed to the GPU buffer.</typeparam>
        </member>
        <member name="M:Mafi.Unity.InstancedRendering.InstancedMeshesRenderer`1.AddInstance(`0)">
            <summary>
            Adds an instance to the rendering buffer. Returns index of the inserted element in the backing array.
            GPU buffer update is deferred to the <see cref="M:Mafi.Unity.InstancedRendering.InstancedMeshesRenderer`1.Render(UnityEngine.Bounds,System.Int32)"/> call.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InstancedRendering.InstancedMeshesRenderer`1.UpdateInstance(System.UInt16,`0)">
            <summary>
            Updates an existing instance on the given index. It is callers responsibility to ensure that the given index
            is valid.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InstancedRendering.InstancedMeshesRenderer`1.GetData(System.UInt16)">
            <summary>
            Returns data on the given index.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InstancedRendering.InstancedMeshesRenderer`1.RemoveInstance(System.UInt16)">
            <summary>
            Removes an instance to the rendering buffer. Caller must ensure that the index is valid. Removing the same index
            more than once is not supported and will result in corrupted datastructure.
            GPU buffer update is deferred to the <see cref="M:Mafi.Unity.InstancedRendering.InstancedMeshesRenderer`1.Render(UnityEngine.Bounds,System.Int32)"/> call.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InstancedRendering.InstancedMeshesRenderer`1.Clear">
            <summary>
            Efficiently clears all data.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InstancedRendering.InstancedMeshesRenderer`1.Render(UnityEngine.Bounds,System.Int32)">
            <summary>
            Updates GPU instancing buffers if they were changed and schedules instancing draw call with
            <see cref="M:UnityEngine.Graphics.DrawMeshInstancedIndirect(UnityEngine.Mesh,System.Int32,UnityEngine.Material,UnityEngine.Bounds,UnityEngine.ComputeBuffer,System.Int32,UnityEngine.MaterialPropertyBlock,UnityEngine.Rendering.ShadowCastingMode,System.Boolean,System.Int32,UnityEngine.Camera,UnityEngine.Rendering.LightProbeUsage,UnityEngine.LightProbeProxyVolume)"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InstancedRendering.InstancingUtils.TryGetMeshLodsAndMaterialFromPrefab(Mafi.Unity.AssetsDb,System.String,UnityEngine.Mesh[]@,UnityEngine.Material@,UnityEngine.GameObject@,System.String@)">
            <summary>
            Extracts mesh LODs and material from given prefab paths. Returned mesh array has always size of
            <see cref="F:Mafi.Unity.Utils.LodUtils.LODS_COUNT"/>. If there are not enough prefabs provided, the last valid mesh will be copied
            to the remaining LODs. Resulting array will not have any nulls in it.
            </summary>
        </member>
        <member name="T:Mafi.Unity.InstancedRendering.VisibleChunksRenderer">
            <summary>
            Handles rendering of chunks that are visible in the camera.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InstancedRendering.IRenderedChunkAlwaysVisible.Name">
            <summary>
            Name of this chunk.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InstancedRendering.IRenderedChunkAlwaysVisible.InstancesCount">
            <summary>
            Number of instances.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InstancedRendering.IRenderedChunk.Name">
            <summary>
            Name of this chunk.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InstancedRendering.IRenderedChunk.ChunkCoord">
            <summary>
            Origin coordinate of this chunk.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InstancedRendering.IRenderedChunk.InstancesCount">
            <summary>
            Number of instances.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InstancedRendering.IRenderedChunk.TrackStoppedRendering">
            <summary>
            Whether to track and call <see cref="M:Mafi.Unity.InstancedRendering.IRenderedChunk.NotifyWasNotRendered"/>.
            </summary>
        </member>
        <member name="P:Mafi.Unity.InstancedRendering.IRenderedChunk.MaxModelDeviationFromChunkBounds">
             <summary>
             Returns maximum possible deviation from the chunk default bounds.
             In other words, by how much can a model stick out of the chunk while its primary coord still being inside it.
            
             IMPORTANT: This must be a constant value, any changes will not be reflected.
             </summary>
        </member>
        <member name="P:Mafi.Unity.InstancedRendering.IRenderedChunk.MinMaxHeight">
            <summary>
            Current min/max height of contents. Used for bounding box.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InstancedRendering.IRenderedChunk.Register(Mafi.Unity.InstancedRendering.IRenderedChunksParent)">
            <summary>
            This chunk is responsible to call <see cref="M:Mafi.Unity.InstancedRendering.IRenderedChunksParent.NotifyHeightRangeChanged(System.Single,System.Single)"/> whenever occupied
            height changes.
            </summary>
        </member>
        <member name="M:Mafi.Unity.InstancedRendering.IRenderedChunk.NotifyWasNotRendered">
            <summary>
            This method will be called if and only if: the <see cref="P:Mafi.Unity.InstancedRendering.IRenderedChunk.TrackStoppedRendering"/> is true
            AND this chunk was rendered during the previous frame AND it was not rendered during this frame.
            </summary>
        </member>
        <member name="E:Mafi.Unity.IUnityInputMgr.ControllerActivated">
            <summary>
            Called when a controller is activated or deactivated.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Layer.Unity00Default">
            <summary>
            Default layer defined by unity. Majority of objects are in this layer.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Main">
            <summary>
            Main class that handles flow of the game and loading of scenes.
            </summary>
        </member>
        <member name="P:Mafi.Unity.Main.CoreMods">
            <summary>
            Mods that have assets that need to be loaded in the main menu.
            </summary>
        </member>
        <member name="P:Mafi.Unity.Main.ExtraMods">
            <summary>
            All other mods that will be loaded only when a new game is starting.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Main.GoToMainMenu(Mafi.Unity.MainMenu.MainMenuArgs)">
            <summary>
            Terminates current scene and starts <see cref="T:Mafi.Unity.MainMenu.MainMenuScene"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Main.StartNewGame(Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Core.Game.IConfig},Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Core.Mods.AvailableModData})">
            <summary>
            Terminates current scene and starts <see cref="T:Mafi.Unity.GamePlayScene"/> with given <see cref="T:Mafi.Core.Game.StartNewGameArgs"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Main.LoadGame(System.String)">
            <summary>
            Terminates current scene and starts <see cref="T:Mafi.Unity.GamePlayScene"/> with given <see cref="T:Mafi.Core.Game.LoadGameArgs"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Main.StartMapEditor(Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Core.Game.IConfig},Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Core.Mods.AvailableModData})">
            <summary>
            Terminates current scene and starts <see cref="T:Mafi.Unity.MapEditor.MapEditorScene"/> with given <see cref="T:Mafi.Core.Game.StartNewGameArgs"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Main.QuitGame">
            <summary>
            Sets <see cref="P:Mafi.Unity.Main.QuitRequested"/> which will cause termination by the owning code.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Main.Update">
            <summary>
            Primary method for running of the game. Should be called every frame.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Main.startScene(Mafi.Unity.IGameScene,System.Boolean)">
            <summary>
            Terminates current scene and starts new scene. Optionally displays loading screen.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Main.cleanupRootScene">
            <summary>
            Removes all non-persistent game objects from current scene.
            </summary>
        </member>
        <member name="T:Mafi.Unity.MapEditor.MapEditorScene">
            <summary>
            Configures and builds the game so that it runs a map editor. This class does not directly handle any map-editing
            features.
            </summary>
        </member>
        <member name="T:Mafi.Unity.MapEditor.IRegisterInMapEditor">
            <summary>
            Marks class to be registered when map editor is starting.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Mine.DesignationControllerCursors">
            <summary>
            Class that provides cursors for designation controllers.
            </summary>
            <remarks>
            Main purpose of this class is to reduce number of cursor instances. All designation controllers share one
            instance of this class.
            </remarks>
        </member>
        <member name="F:Mafi.Unity.Mine.MineTowerAreasRenderer.m_towersData">
            <summary>
            All mine towers in the scene with their (cached) areas and outlines of areas.
            </summary>
            <remarks>
            List should be enough here (no need for HashSet) as the only cases when we need to search in for a tower in
            the list is tower addition and removal, which are expected to be infrequent.
            </remarks>
        </member>
        <member name="F:Mafi.Unity.Mine.MineTowerAreasRenderer.m_parentGo">
            <summary>
            Parent game object of all the are outlines.
            </summary>
        </member>
        <member name="M:Mafi.Unity.ObjectHighlighter.#ctor(UnityEngine.Camera,Mafi.Unity.AssetsDb,System.Single,System.Int32,System.Int32)">
            <summary>
            The primary constructor is private to allow special ctor for dependency resolver. Use static factory method
            <see cref="M:Mafi.Unity.ObjectHighlighter.CreateForCamera(UnityEngine.Camera,Mafi.Unity.AssetsDb,System.Single,System.Int32,System.Int32)"/> to construct this object.
            </summary>
        </member>
        <member name="M:Mafi.Unity.ObjectHighlighter.Highlight(UnityEngine.GameObject,Mafi.ColorRgba)">
            <summary>
            Highlights given game object. Multiple overlay colors are supported and are added. Each color is added and
            removed independently.
            </summary>
            <remarks>
            The object will glow with given color and itself it will be covered by color intensity equal to transparency
            of the color (inverted alpha). For example opaque color results in no overlay color, only glow. 25%
            transparent color results in 25% overlay of the object and 75% glow.
            </remarks>
        </member>
        <member name="M:Mafi.Unity.ObjectHighlighter.RemoveHighlight(UnityEngine.GameObject,Mafi.ColorRgba)">
            <summary>
            Removes highlight color from given <see cref="T:UnityEngine.GameObject"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.ObjectHighlighter.RemoveAllHighlights(UnityEngine.GameObject)">
            <summary>
            Removes all highlighted colors from given <see cref="T:UnityEngine.GameObject"/>.
            </summary>
        </member>
        <member name="F:Mafi.Unity.ObjectHighlighter.HighlightedObject.s_renderersTmp">
            <summary>
            Helper list for allocation-free retrieval of renderers.
            </summary>
        </member>
        <member name="F:Mafi.Unity.ObjectHighlighter.HighlightedObject.m_colors">
            <summary>
            List that stores colors if more that one color is used for highlight. We create the list only if two or
            more colors are needed since more than one color is very rare.
            </summary>
        </member>
        <member name="M:Mafi.Unity.ObjectHighlighter.HighlightedObject.RemoveColor(Mafi.ColorRgba)">
            <summary>
            Tries to remove given highlighted color. Returns true when color was removed.
            </summary>
        </member>
        <member name="M:Mafi.Unity.ICustomHighlightsRenderer.UpdateDataIfNeeded">
            <summary>
            Returns whether the buffer should be re-registered after the update.
            </summary>
        </member>
        <member name="M:Mafi.Unity.ObjMeshExporter.ExportObjAndClear(System.String,System.String,Mafi.Unity.MeshBuilder)">
            <summary>
            Exports OBJ mesh to given directory and clears given builder.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Particles.IParticlesController">
            <summary>
            Runs particle system for entity.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Ports.Io.IoPortMb.SetTransform(UnityEngine.GameObject,Mafi.Tile3i,Mafi.Direction90)">
            <summary>
            Sets position and direction of this port to given absolute values.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Ports.Io.IoPortMb.SetTransform(UnityEngine.GameObject,Mafi.Core.Ports.Io.IoPortTemplate,Mafi.Core.Entities.Static.Layout.EntityLayout,Mafi.Core.TileTransform)">
            <summary>
            Sets position and rotation of this port based on given layout port and layout data.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Ports.Io.IoPortModelFactory">
            <summary>
            IO port model factory.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Ports.Io.IoPortModelFactory.CreateModelFor(Mafi.Core.Ports.Io.IoPort)">
            <summary>
            Returns a model for requested port. This method uses GO pool. Please use method <see
            cref="M:Mafi.Unity.Ports.Io.IoPortModelFactory.ReturnModelOf(Mafi.Core.Ports.Io.IoPort,UnityEngine.GameObject@)"/> to return GOs back to pool.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Ports.Io.IoPortModelFactory.CreateModelFor(Mafi.Core.Ports.Io.IoPortShapeProto,System.Boolean,UnityEngine.Material)">
            <summary>
            Returns a model for requested shape. This method uses GO pool. Please use method <see
            cref="M:Mafi.Unity.Ports.Io.IoPortModelFactory.ReturnModelOf(Mafi.Core.Ports.Io.IoPortShapeProto,UnityEngine.GameObject@)"/> to return GOs back to pool.
            </summary>
            <param name="shapeProto">Proto</param>
            <param name="isEndModel">Whether to return special end-model.</param>
            <param name="customSharedMaterial">Optional custom material to use.</param>
        </member>
        <member name="M:Mafi.Unity.Ports.Io.IoPortModelFactory.GeneratePlaceholderMesh">
            <summary>
            Creates placeholder mesh for a port.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Ports.Io.IoPortModelFactory.ReturnModelOf(Mafi.Core.Ports.Io.IoPort,UnityEngine.GameObject@)">
            <summary>
            Returns model of this port. The model should not have arrow attached and should not be highlighted.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Ports.Io.IoPortModelFactory.ReturnModelOf(Mafi.Core.Ports.Io.IoPortShapeProto,UnityEngine.GameObject@)">
            <summary>
            Returns model of the port. The model should not have arrow attached and should not be highlighted.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Ports.Io.IoPortsRenderer.PortsChunkBase">
            <summary>
            Infrastructure for instanced rendering.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Ports.Io.IoPortsRenderer.PortsChunkBase.ShowPortVisual(Mafi.Unity.Ports.Io.IoPortVisual)">
            <summary>
            Shows port and returns instance ID. Returned ID is never zero (zero is considered "invalid" id).
            </summary>
        </member>
        <member name="M:Mafi.Unity.Ports.Io.IoPortsRenderer.PortsChunkBase.HidePortVisual(System.UInt32)">
            <summary>
            Hides port visual based on ID obtained from <see cref="M:Mafi.Unity.Ports.Io.IoPortsRenderer.PortsChunkBase.ShowPortVisual(Mafi.Unity.Ports.Io.IoPortVisual)"/>.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Ports.Io.IoPortsRenderer.PortsChunkStandard">
            <summary>
            Chunk of rendered ports.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Ports.Io.IoPortsRenderer.PortsChunkImmediate">
            <summary>
            All immediate ports (there is only a single chunk).
            </summary>
        </member>
        <member name="M:Mafi.Unity.Ports.Io.IoPortsRenderer.PortsChunkImmediate.UpdateVisual(System.UInt32,Mafi.Tile3i,Mafi.Direction90,Mafi.ColorRgba)">
            <summary>
            Updates existing visual. Use this only on the immediate chunk.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Ports.Io.IoPortsRenderer.HighlightComputationRequest">
            <summary>
            Handles synchronization of highlight requests. Note that we may have one pending request and one processed
            request at the same time, so we need to keep more fields to be able to distinguish.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Ports.Io.IoPortsRenderer.INSTA_HIGHLIGHT_PROCESSING_DISTANCE">
            <summary>
            Chunks at this distance will all get processed highlights instantly, otherwise, we process one per tick.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Ports.Io.IoPortsRenderer.GetPortForArrow``1(UnityEngine.GameObject)">
            <summary>
            Returns port for given game object of an arrow. Every arrow belongs to one port.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Ports.Io.IoPortsRenderer.HighlightPorts(System.Predicate{Mafi.Core.Ports.Io.IoPort},System.Boolean)">
             <summary>
             Highlights ports that match the given predicate. This also shows arrows and icons next to them.
             Multiple highlight requests can be overlapping but only the latest one will be active.
            
             IMPORTANT: The given predicate is cached and invoked on sim thread. Ensure that all captured variables will
             be valid for the entire duration of the highlight.
             </summary>
        </member>
        <member name="M:Mafi.Unity.Ports.Io.IoPortsRenderer.HighlightAllPortsOf(Mafi.Core.Entities.Static.IStaticEntity,System.Predicate{Mafi.Core.Ports.Io.IoPort},System.Boolean)">
            <summary>
            Important: Given predicate is invoked later on sim thread. Ensure that all captured variables are gonna
            be valid.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Ports.Io.IoPortsRenderer.UpdatePortVisualHighlight(Mafi.Unity.Ports.Io.PortHighlightData,Mafi.Tile3i,Mafi.Direction90)">
            <summary>
            Updates port highlight position and direction.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Terrain.Designation.TerrainDesignationsRenderer.DesignationsChunk.m_dataIndexLookup">
            <summary>
            Converts designation rel ID to data index. This serves as O(1) lookup (way faster than dict).
            </summary>
        </member>
        <member name="T:Mafi.Unity.Terrain.Designation.TerrainDesignationsRenderer.DesignationsChunk.TerrainDesignationInstanceData">
            <summary>
            Per-instance data that is passed to GPU. Layout of this struct must match the `InstanceData` struct
            in the `TerrainDesignationInstanced` shader.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Terrain.Designation.TerrainDesignationsRenderer.DesignationsChunk.TerrainDesignationInstanceData.Position">
            <summary>
            XY position of the origin and depth at the center in the z channel.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Terrain.Designation.TerrainDesignationsRenderer.DesignationsChunk.TerrainDesignationInstanceData.HeightAtCenter">
            <summary>
            Height at
            </summary>
        </member>
        <member name="F:Mafi.Unity.Terrain.Designation.TerrainDesignationsRenderer.DesignationsChunk.TerrainDesignationInstanceData.EdgeWarningPacked">
            <summary>
            Packed warning per edge using powers of two. Add 1.0 for warning at -Y edge, 2.0 for +X,
            4.0 for +Y, and 8.0 for -Y.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Terrain.Designation.TerrainDesignationsRenderer.DesignationsChunk.TerrainDesignationInstanceData.HeightAtCorners">
            <summary>
            Depth at the four corners: origin, +X, +XY, +Y.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Terrain.Designation.TerrainDesignationsRenderer.DesignationsChunk.TerrainDesignationInstanceData.Color">
            <summary>
            Color and depth at the center in the alpha channel.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Terrain.TerrainChunkRenderer">
             <summary>
             Handles terrain rendering including terrain details (grass/rocks).
             </summary>
             <remarks>
             To make the rendering as efficient as possible, instead of updating tile texture/height data every time
             a terrain event comes in (the way we had it until alpha), we only mark affected tiles and postpone the
             update for later.
            
             The actual update is performed after a delay that is affected by the camera distance. This means that chunks
             that are close to the camera are updated more often than chunks that are far away. Small changes on further
             chunks are likely not even visible so slower updates only save on heavy texture blending computation without
             sacrificing visuals (assuming that camera cannot jump of move super fast).
            
             The data re-computation is done on sim thread to not delay rendering or sync, but to avoid the need for two
             versions of all data arrays (for sim and main threads), we enforce minimal update delay of one tick, so that
             when data is being updated on sim thread, renderer on main thread is not reading from them, and vice versa.
             Given that the game runs at 10 Hz, maximal terrain update frequency is 5 Hz which is high enough.
             </remarks>
        </member>
        <member name="P:Mafi.Unity.Terrain.TerrainChunkRenderer.WorldBounds">
            <summary>
            Bounds of this chunk.
            </summary>
        </member>
        <member name="P:Mafi.Unity.Terrain.TerrainChunkRenderer.HeightTexture">
            <summary>
            Texture of size (tiles pre chunk + 1) where each pixel represents height.
            Note that this texture is initialized on the first sync, after that it never changes.
            Texture format is <c>TextureFormat.RFloat</c>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Terrain.TerrainChunkRenderer.Initialize(Mafi.Option{UnityEngine.GameObject},UnityEngine.Material)">
            <summary>
            Finishes initialization on Main thread that could not be performed in the ctor.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Terrain.TerrainChunkRenderer.getUpdateDelayFromDistSqr(System.Single)">
            <summary>
            Returns update interval based on sqr distance. This function is continuous so that chunks update
            semi-randomly based on distance from camera to avoid lots of updates in any single frame.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Terrain.TerrainChunkRenderer.Raycast(UnityEngine.Ray)">
            <summary>
            Returns the first intersection between given ray and terrain.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Terrain.TerrainChunkRenderer.encodeToFloat(System.Single[],System.Int32)">
            <summary>
            Encodes 4 weights from given array starting at given index.
            NOTE: This encoding is lossy, esp. when the first weight is high, last weight is lost. Unfortunately,
            this is enforced by MicroSplat data packing.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Terrain.TerrainChunkRenderer.encodeTexWeights(System.Int32,System.Single[])">
            <summary>
            Encodes given texture weights to color and uv arrays.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Terrain.TerrainChunkRenderer.DetailLayerData.allocateNewGroup">
            <summary>
            Returns new start index.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Terrain.TerrainChunkRenderer.DetailLayerData.DetailInstanceData">
            <summary>
            Per-instance data that is passed to GPU. Layout of this struct must match the `MeshProperties` struct
            in the shader.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Terrain.TerrainChunkRenderer.TileSurfaceInstanceData">
            <summary>
            Per-instance data that is passed to GPU. Layout of this struct must match the `InstanceData` struct
            in the `??` shader.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Terrain.TerrainRectSelection">
            <summary>
            Highlights a rectangular area on terrain by drawing lines on the border.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Terrain.TerrainRectSelection.SetArea(Mafi.Core.Terrain.RectangleTerrainArea2i,UnityEngine.Color,Mafi.HeightTilesF)">
            <returns>
            True if the outline was successfully created, false if a phantom tile was hit while creating the outline. If
            creation of outline was unsuccessful the outline then stays the same as before.
            </returns>
        </member>
        <member name="P:Mafi.Unity.Terrain.TerrainRenderer.ApplyAllChangesImmediatelyInSync">
            <summary>
            This makes the renderer apply all pending changes immediately. This will introduce lags.
            </summary>
        </member>
        <member name="P:Mafi.Unity.Terrain.TerrainRenderer.ParentGo">
            <summary>
            Parent GO that stores all the ports to avoid mess in the scene root.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Terrain.TerrainRenderer.m_newChunks">
            <summary>
            New chunks created by terrain from last sync. This list is being updated in the sim thread.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Terrain.TerrainRenderer.m_updateRenderDataStage">
            <summary>
            In order to optimize update of terrain, we alternate between two stages:
            1) Updating data from sim to data structures to render data on sim thread, and
            2) Updating rendered data on main thread.
            Thanks to this, we do not need to have two copies of all data (one for each stage) and sync is fast.
            Disadvantage is a delay of data propagation and the fact that update happens only every other frame making
            sim/main thead workloads fluctuate.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Terrain.TreeMb.BeingHarvested">
            <summary>
            Sets the tree as being harvested, TreeMb that is being harvested is not going to be destroyed by <see
            cref="T:Mafi.Unity.Terrain.TreeRenderer"/>.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Terrain.WaterRenderer">
            <summary>
            Handles rendering of water. It generates meshes for water chunks and renders advanced water effects such as
            reflections and refractions.
            </summary>
            <remarks>
            You will find lots of commented-out code in this class due to removed water reflections. We are keeping it
            around in case we decide to add them later.
            </remarks>
        </member>
        <member name="P:Mafi.Unity.Terrain.WaterRenderer.ApplyAllChangesImmediatelyInSync">
            <summary>
            This makes the renderer apply all pending changes immediately. This will introduce lags.
            </summary>
        </member>
        <member name="P:Mafi.Unity.Terrain.WaterRenderer.GenerateNonOptimizedWaterChunks">
            <summary>
            Whether to generate all water chunks as simple squares without cutting away parts.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Terrain.WaterRenderer.m_newChunks">
            <summary>
            New chunks created by terrain from last sync. This list is being updated in the sim thread.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Terrain.WaterRenderer.m_originalWaterSpec">
            <summary>
            List of chunks to instantiate during render (to not lag sync).
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.BtnWithGridContainer">
            <summary>
            Component that wraps a button (to add elements) and grid view of added elements. Used for instance for assigned
            buildings.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.Btn.PlayErrorSoundWhenDisabled">
            <summary>
            Plays error sound when the player clicks on the button when it is disabled.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.BtnListener">
            <summary>
            Unity listener script to be attached to a button GO.
            </summary>
            <remarks>
            Why do we have this object? Previously we created Event Trigger for each event we needed. But that dude ate all
            other events so for instance scrolling events were not propagated. As the remedy we are using this object. See
            more in http://answers.unity3d.com/questions/902929/scroll-not-working-when-elements-inside-have-click.html
            </remarks>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.BtnStyle.DarkTextWhenDisabled">
            <summary>
            Won't work if button has image as background also.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.Tooltip.TooltipImpl">
            <summary>
            This class enables to have just 1 go of tooltip and share it with all the instance.
            This saves 1k tooltip instances.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.Canvass.SetSortOrder(System.Int32)">
            <summary>
            The greater the number the greater priority to be on top.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.Charts.AxisMeasure.ViewLength">
            <summary>
            Length of the visible part of the axis in GUI.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.Charts.ChartStyle.PointSize">
            <summary>
            Diameter of points.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.Charts.DataSeries.Values">
            <summary>
            We store values as longs since this can both integer and fix-point numbers.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.Charts.ChartTailAdapter">
            <summary>
            Takes last N elements from chart's underlying data + provides caching.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UiFramework.Components.Charts.ChartTailAdapter.HorizontalLabels">
            <summary>
            Horizontal labels are always from 1 and up, so we can just cache them.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.Charts.GraphChart">
            <summary>
            A 2D chart showing data as either points or lines connecting the points.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.Charts.GraphChart.Generate">
            <summary>
            (Re)Generates graphics of the chart. Invoke after change in data.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.Charts.PointHighlighter.CLOSEST_POINT_SEARCH_RANGE">
            <summary>
            Determines how many indices are checked when searching for the data point that is closest the mouse cursor.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UiFramework.Components.Charts.VerticalAxis.Measure">
            <summary>
            Generated after call to <see cref="M:Mafi.Unity.UiFramework.Components.Charts.VerticalAxis.Generate(Mafi.Collections.ReadonlyCollections.IIndexable{Mafi.Unity.UiFramework.Components.Charts.DataSeriesContainer})"/>
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.GridContainer">
            <summary>
            Container that organizes its items in form of a regular grid. Items are placed from top right.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.GridContainer.ComputeWidthFor(System.Int32)">
            <summary>
            Computes what will be the width of the container if it would have the given amount of columns. This takes
            into account all the current paddings and spacings so use it once you provided all of that.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.GridContainer.ComputeHeightFor(System.Int32)">
            <summary>
            Computes what will be the height of the container if it would have the given amount of rows. This takes into
            account all the current paddings and spacings so use it once you provided all of that.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.GridContainer.GetRequiredWidth">
            <summary>
            Returns the width this container needs under its current size mode.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.GridContainer.GetRequiredHeight">
            <summary>
            Returns the height this container needs under its current size mode.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.GridContainer.SetDynamicWidthMode(System.Int32)">
            <summary>
            See <see cref="F:Mafi.Unity.UiFramework.Components.GridContainer.SizeMode.DynamicWidth"/>. Set number of rows the contrainer should use. If you don't specify
            the number then the container will automatically fit its width.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.GridContainer.SetDynamicHeightMode(System.Int32)">
            <summary>
            See <see cref="F:Mafi.Unity.UiFramework.Components.GridContainer.SizeMode.DynamicHeight"/>. Set number of columns the contrainer should use. If you don't
            specify the number then the container will automatically fit its height.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.GridContainer.SetCellSpacing(UnityEngine.Vector2)">
            <summary>
            Default is zero.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.GridContainer.SetCellSpacing(System.Single)">
            <summary>
            Default is zero.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.GridContainer.SetInnerPadding(Mafi.Unity.UiFramework.Offset)">
            <summary>
            Default is zero.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.GridContainer.Append(Mafi.Unity.UiFramework.IUiElement)">
            <summary>
            Adds new item to the end of this container.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.GridContainer.StartBatchOperation">
            <summary>
            Use this before running mass changes as it prevents running layout recomptutation for every single change.
            After you are done don't forget to call <see cref="M:Mafi.Unity.UiFramework.Components.GridContainer.FinishBatchOperation"/>
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.GridContainer.FinishBatchOperation">
            <summary>
            Request layout recomputation. Use this after <see cref="M:Mafi.Unity.UiFramework.Components.GridContainer.StartBatchOperation"/>.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.GridContainer.SizeMode.DynamicAll">
            <summary>
            The container grows to both sides automatically.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.GridContainer.SizeMode.DynamicWidth">
            <summary>
            The container has fixed height determined by the given number of rows.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.GridContainer.SizeMode.DynamicHeight">
            <summary>
            The container has fixed width determined by the given number of columns.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.ScrollableContainer">
            <summary>
            Provides scrolling of the given content. You have to grow your content dynamically and the ScrollableContainer
            will take care of scrolling. You can position this view as any other view.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.ScrollableContainer.SetContentToScroll(Mafi.Unity.UiFramework.IUiElement)">
            <summary>
            This does NOT add the object to the viewport it will only set it for scrolling. Before calling this call <see
            cref="!:AddChild"/>. This is useful when you have more children and you want to choose which one is active.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.ScrollableContainer.AddItemTop(Mafi.Unity.UiFramework.IUiElement,System.Boolean)">
            <summary>
            Adds the given object to the viewport and set it active for scrolling if requested.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.ScrollableContainer.AddItemTopCenter(Mafi.Unity.UiFramework.IUiElement,System.Boolean)">
            <summary>
            Adds the given object to the viewport and set it active for scrolling if requested.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.ScrollableContainer.AddItemBottom(Mafi.Unity.UiFramework.IUiElement,System.Boolean)">
            <summary>
            Adds the given object to the viewport and set it active for scrolling if requested.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.ScrollableContainer.AddItemLeft(Mafi.Unity.UiFramework.IUiElement,System.Boolean)">
            <summary>
            dds the given object to the viewport and set it active for scrolling if requested.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.ScrollableContainer.AddItemCenter(Mafi.Unity.UiFramework.IUiElement,System.Boolean)">
            <summary>
            dds the given object to the viewport and set it active for scrolling if requested.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.ScrollableContainer.AddItemRight(Mafi.Unity.UiFramework.IUiElement,System.Boolean)">
            <summary>
            Adds the given object to the viewport and set it active for scrolling if requested.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.ScrollableContainer.AddItem(Mafi.Unity.UiFramework.IUiElement,Mafi.Unity.UiFramework.VerticalPosition,Mafi.Unity.UiFramework.HorizontalPosition,System.Boolean)">
            <summary>
            Adds the object to the viewport and setup scrolling for it. Same as calling <see cref="!:AddChild"/> + <see
            cref="M:Mafi.Unity.UiFramework.Components.ScrollableContainer.SetContentToScroll(Mafi.Unity.UiFramework.IUiElement)"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.ScrollableContainer.ResetToLeft">
            <summary>
            Resets the scroll position to left of the container.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.ScrollableContainer.ResetToTop">
            <summary>
            Resets the scroll position to the top of the container.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.ScrollableContainer.ResetToBottom">
            <summary>
            Resets the scroll position to the bottom of the container.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.ScrollableContainer.FixScroll">
            <summary>
            Clamps normalized scroll position to its normal limits [0, 1] in both axes.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.LeftRightScrollRect">
            <summary>
            Also allows dragging with right mouse button, to match in-game camera behavior.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.ScrollableStackContainer">
            <summary>
            Automatically scrolls its content if it gets over maxHeight
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.SimpleProgressBar.m_progress">
            <summary>
            Value in [0, 1].
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.SimpleProgressBar.UpdateProgressSize">
            <summary>
            Updates progress visualisation according to current progress. To be called after size change.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.Slidder.SimpleSlider(Mafi.Unity.UiFramework.Components.SliderStyle)">
            <summary>
            Builds the default simple slider. Don't combine this with <see cref="M:Mafi.Unity.UiFramework.Components.Slidder.SetCustomHandle(Mafi.Unity.UiFramework.IUiElement,System.Single)"/>.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.SliderStyle.BgSprite">
            <summary>
            Used for background, fill and handle.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.SliderStyle.HandleWidth">
            <summary>
            Note that it must be dividable by 2.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.SomethingOutOfSomethingView">
            <summary>
            [text] [icon] / [text] [icon]
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.StackContainer.m_itemOffsetMask">
            <summary>
            Left, bottom, right, top offset mask.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.StackContainer.m_items">
            <summary>
            Objects in the direction.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.StackContainer.#ctor(Mafi.Unity.UserInterface.UiBuilder,System.String,UnityEngine.GameObject)">
            <summary>
            Creates new stacking container in given <paramref name="containerObject"/>. Objects are stacked in given <see
            cref="T:Mafi.Unity.UiFramework.Components.StackContainer.Direction"/> and stretched in the other direction.
            </summary>
            <remarks>
            If this container is not dynamic the host container size should be properly set. If this container is
            dynamic, only the dynamic size on it will be set (X for horizontal, Y for vertical) and the other will be
            preserved.
            </remarks>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.StackContainer.SetStackingDirection(Mafi.Unity.UiFramework.Components.StackContainer.Direction)">
            <summary>
            Default is left-to-right.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.StackContainer.SetSizeMode(Mafi.Unity.UiFramework.Components.StackContainer.SizeMode)">
            <summary>
            Default is dynamic.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.StackContainer.SetInnerPadding(Mafi.Unity.UiFramework.Offset)">
            <summary>
            Default is zero.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.StackContainer.SetItemSpacing(System.Single)">
            <summary>
            Default is zero.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.StackContainer.Add(System.Single,Mafi.Unity.UiFramework.IUiElement,System.Nullable{UnityEngine.Vector2},System.Nullable{Mafi.Unity.UiFramework.Components.ContainerPosition},Mafi.Unity.UiFramework.Offset,System.Boolean)">
            <summary>
            Adds new item to the end of this container.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.StackContainer.AddDivider(System.Single,System.Single,Mafi.ColorRgba)">
            <summary>
            Adds a divider of specified size after this item.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.StackContainer.Remove(Mafi.Unity.UiFramework.IUiElement)">
            <summary>
            Removes existing item from the container.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.StackContainer.RemoveAndDestroy(Mafi.Unity.UiFramework.View)">
            <summary>
            Removes the underlying game object of the give view and destroys the view.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.StackContainer.RemoveAndDestroy(Mafi.Unity.UiFramework.IUiElement)">
            <summary>
            Removes the given game object and destroys it.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.StackContainer.GetDynamicHeight">
            <summary>
            Returns height of the container if used with dynamic vertical grow. Otherwise returns 0.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.StackContainer.GetDynamicWidth">
            <summary>
            Returns width of the container if used with dynamic horizontal grow. Otherwise returns 0.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.StackContainer.StartBatchOperation">
            <summary>
            Use this before running mass changes as it prevents running layout recomputation for every single change.
            After you are done don't forget to call <see cref="M:Mafi.Unity.UiFramework.Components.StackContainer.FinishBatchOperation"/>
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.StackContainer.FinishBatchOperation">
            <summary>
            Request layout recomputation. Use this after <see cref="M:Mafi.Unity.UiFramework.Components.StackContainer.StartBatchOperation"/>.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.StackContainer.SizeMode.StaticDirectionAligned">
            <summary>
            Size of the container is not changing based on its content and all the items are stacked in the direction
            from the start of the container.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.StackContainer.SizeMode.StaticCenterAligned">
            <summary>
            Size of the container is not changing based on its content and all the items are stacked in the
            direction. If there is less items than size of container the items are centered.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.StackContainer.SizeMode.Dynamic">
            <summary>
            Size of the container is automatically changed based on the items.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.Table.BtnColumn">
            <summary>
            Column that contains button. Only button, nothing else.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.Table.Column`2">
            <summary>
            Basic implementation of <see cref="T:Mafi.Unity.UiFramework.Components.Table.IColumn"/> to reduce boiler plate code in super classes.
            </summary>
            <typeparam name="TValue">Type of value</typeparam>
            <typeparam name="TView">Type of view</typeparam>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.Table.Column`2.m_view">
            <summary>
            Table that own this column.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.Table.Column`2.m_cache">
            <summary>
            Last known values cache to reduce UI updates.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.Table.Column`2.m_views">
            <summary>
            Views for each row (e.g. Text).
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.Table.Column`2.CreateView(Mafi.Unity.UserInterface.UiBuilder,System.Boolean)">
            <summary>
            Creates view to be used in the table.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.Table.Column`2.ResolveGameObject(`1)">
            <summary>
            Returns gameObject from the given view.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.Table.Column`2.UpdateCell(System.Int32,`1,`0,`0)">
            <summary>
            Updates the given view with the given new value.
            </summary>
            <remarks>WARNING! Implementors shouldn't update UI if oldValue == newValue!</remarks>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.Table.Fix32Column">
            <summary>
            Column that displays quantity.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.Table.IColumn">
            <summary>
            General interface for column implemenation used in <see cref="T:Mafi.Unity.UiFramework.Components.Table.Table"/>
            </summary>
        </member>
        <member name="P:Mafi.Unity.UiFramework.Components.Table.IColumn.Title">
            <summary>
            Title that should be used in the header. Ignored if <see cref="P:Mafi.Unity.UiFramework.Components.Table.IColumn.MergeWithPrevious"/> is true.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UiFramework.Components.Table.IColumn.Width">
            <summary>
            Fixed width of the column.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UiFramework.Components.Table.IColumn.MergeWithPrevious">
            <summary>
            Whether the header of this column should be merged with previsou column. Also no divider will be shown
            between merged columns.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.Table.IColumn.AddRow(System.Boolean)">
            <summary>
            Adds new row to the column.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.Table.IColumn.RemoveLastRow">
            <summary>
            Removes last row from the column.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.Table.IColumn.GetGameObject(System.Int32)">
            <summary>
            Returns GameObject for the given row that should be used in the table.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.Table.IColumn.InnerOffset">
            <summary>
            Custom offset of the view in table cell.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.Table.MoneyColumn">
            <summary>
            Column that displays money and provides coloring based on sign.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Components.Table.MoneyColumn.m_noSign">
            <summary>
            Whether sign (+/-) should be printed in front of money or not.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.Table.QuantityColumn">
            <summary>
            Column that displays quantity.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.Table.Table.AddColumn(Mafi.Unity.UiFramework.Components.Table.IColumn)">
            <summary>
            Don't add any new columns once you added a row or request a min width!
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.Table.Table.AddRows(System.Int32,System.Boolean)">
            <summary>
            All columns must be added before calling this!
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.Table.Table.AddRow(System.Action,System.Boolean,System.Int32)">
            <summary>
            All columns must be added before calling this!
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.Table.TxtColumn">
            <summary>
            Column that displays string.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.Tabs.Tab">
            <summary>
            Used in <see cref="T:Mafi.Unity.UiFramework.Components.Tabs.TabsContainer"/>.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.Tabs.TabsContainer">
            <summary>
            Displays tabs
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.TextWithIcon">
            <summary>
            [text] [icon]
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.Txt.SetPreferredSize">
            <summary>
            Sets size to preferred size.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Components.CustomInputField">
            <summary>
            This exists just to workaround a text selection issue during focus. Basically anytime
            a text field that has text gets focus, it highlights all the content which sucks. Thanks unity.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.Components.TxtField.Focus">
            <summary>
            NOTE: This elements and all its parents need to be visible in order for this to work.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.DragDropHandlerMb">
            <summary>
            Unity script to be attached to a UI GO.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.GameObjectRenderer.DEBUG_SAVE_ALL_IMG_TRIALS">
            <summary>
            Whether to save all trials of the renders. This will result in A LOT of images!
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.GameObjectRenderer.setCameraDistance(UnityEngine.GameObject,UnityEngine.Vector3,System.Single)">
            <summary>
            Sets camera distance from given game object. <paramref name="originOffset"/> should be relative offset form
            game object's origin at which the camera is pointed.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.GameObjectRenderer.getBoundingBox(UnityEngine.GameObject)">
            <summary>
            Computes bounding box of given game object.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.GameObjectRenderer.renderTo(UnityEngine.Texture2D)">
            <summary>
            Renders current scene to a given texture.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.GameObjectRenderer.findOptimalDistance(UnityEngine.GameObject,UnityEngine.Vector3,System.Single,System.Single,System.Single,System.String,System.Action{System.Single})">
            <summary>
            Performs binary search of camera distance to find smallest distance such that all pixels on the image
            boundary are still not filled.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.GameObjectRenderer.hasNonemptyPixelOnBoundary(UnityEngine.Texture2D)">
            <summary>
            Returns whether given texture has non-empty pixel on the boundary. Empty pixel is defined as transparent
            black.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.IDynamicSizeElement">
            <summary>
            Any ui element that has a dynamic size can implement this interface. When such element is registered into a
            container that supports this interface, the container will listen to the changes and resizes itself accordingly.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PlaceViaEnvelope``1(``0,Mafi.Unity.UiFramework.IUiElement,System.Single)">
             <summary>
             Fills given parent with this object while keeping its aspect ratio using envelope mode.
            
             See https://docs.unity3d.com/Manual/script-AspectRatioFitter.html
             </summary>
             <param name="aspectRatio">Width divided by height.</param>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutTo``1(``0,Mafi.Unity.UiFramework.IUiElement,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills the given parent with this object.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutToLeftOf``1(``0,Mafi.Unity.UiFramework.IUiElement,System.Single,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills the given parent with this object vertically and aligns it to the left.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutToRightOf``1(``0,Mafi.Unity.UiFramework.IUiElement,System.Single,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills the given parent with this object vertically and aligns it to the right.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutToCenterOf``1(``0,Mafi.Unity.UiFramework.IUiElement,System.Single,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills the given parent with this object vertically and aligns it to the center.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutToTopOf``1(``0,Mafi.Unity.UiFramework.IUiElement,System.Single,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills the given parent with this object horizontally and aligns it to the top.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutToBottomOf``1(``0,Mafi.Unity.UiFramework.IUiElement,System.Single,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills the given parent with this object horizontally and aligns it to the bottom.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutToMiddleOf``1(``0,Mafi.Unity.UiFramework.IUiElement,System.Single,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills the given parent with this object horizontally and aligns it to the middle.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutToLeftTopOf``1(``0,Mafi.Unity.UiFramework.IUiElement,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the left top corner of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutToLeftMiddleOf``1(``0,Mafi.Unity.UiFramework.IUiElement,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the left middle corner of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutToLeftBottomOf``1(``0,Mafi.Unity.UiFramework.IUiElement,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the left bottom corner of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutToRightTopOf``1(``0,Mafi.Unity.UiFramework.IUiElement,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the right top corner of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutToRightMiddleOf``1(``0,Mafi.Unity.UiFramework.IUiElement,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the right middle corner of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutToRightBottomOf``1(``0,Mafi.Unity.UiFramework.IUiElement,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the right bottom corner of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutToCenterTopOf``1(``0,Mafi.Unity.UiFramework.IUiElement,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the center top part of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutToCenterMiddleOf``1(``0,Mafi.Unity.UiFramework.IUiElement,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the center and middle of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutToCenterBottomOf``1(``0,Mafi.Unity.UiFramework.IUiElement,UnityEngine.Vector2,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Position this object to the center bottom part of the parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.UiElementExtensions.PutRelativeTo``1(``0,Mafi.Unity.UiFramework.IUiElement,UnityEngine.Vector2,Mafi.Unity.UiFramework.HorizontalPosition,Mafi.Unity.UiFramework.VerticalPosition,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Positions this object relative to the given parent.
            </summary>
            <param name="parent">Parent object.</param>
            <param name="size">Size of this object. Size is ignored for dimensions that are set to stretch.</param>
            <param name="horizontalPosition">Horizontal position</param>
            <param name="verticalPosition">Vertical position</param>
            <param name="offset">Offset from sides.</param>
        </member>
        <member name="T:Mafi.Unity.UiFramework.IUnityUi">
            <summary>
            Marks a class for UI registration.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.IUnityUi.RegisterUi(Mafi.Unity.UserInterface.UiBuilder)">
            <summary>
            This is called during mods initialization phase before the game starts.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.LayoutHelper">
            <summary>
            Helper class for positioning UI objects.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.LayoutHelper.PositionAbsolute(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector2,UnityEngine.Vector2,Mafi.Unity.UiFramework.HorizontalPosition,Mafi.Unity.UiFramework.VerticalPosition)">
            <summary>
            Positions this object at given absolute coordinate on the main canvas. The position relative from the point
            specified by the <paramref name="horizontalPosition"/> and <paramref name="verticalPosition"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.LayoutHelper.Fill(UnityEngine.GameObject,UnityEngine.GameObject,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Positions given object to fill given parent.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.LayoutHelper.FillVertically(UnityEngine.GameObject,UnityEngine.GameObject,System.Single,Mafi.Unity.UiFramework.HorizontalPosition,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills given parent with this object.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.LayoutHelper.FillHorizontally(UnityEngine.GameObject,UnityEngine.GameObject,System.Single,Mafi.Unity.UiFramework.VerticalPosition,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Fills given parent with this object.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UiFramework.LayoutHelper.PositionRelative(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Positions this object relative to the given parent. The most general method, you can use more specific
            methods below.
            </summary>
            <param name="parentObject">Parent object.</param>
            <param name="objectToPosition">Object to position.</param>
            <param name="pivot">Normalized pivot point of this object. It is also center of rotation.</param>
            <param name="position">Position of the pivot relative to the anchor reference point.</param>
            <param name="sizeDelta">Size of this object relative to the distance between anchors.</param>
            <param name="anchorLeft">Normalized position from left of parent.</param>
            <param name="anchorBottom">Normalized position from bottom of parent.</param>
            <param name="anchorRight">Normalized position from right of parent.</param>
            <param name="anchorTop">Normalized position from top of parent.</param>
        </member>
        <member name="M:Mafi.Unity.UiFramework.LayoutHelper.PositionRelative(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector2,Mafi.Unity.UiFramework.HorizontalPosition,Mafi.Unity.UiFramework.VerticalPosition,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Positions this object relative to the given parent.
            </summary>
            <param name="parentObject">Parent object.</param>
            <param name="objectToPosition">Object to position.</param>
            <param name="size">Size of this object. Size is ignored for dimensions that are set to stretch.</param>
            <param name="horizontalPosition">Horizontal position</param>
            <param name="verticalPosition">Vertical position</param>
            <param name="offset">Offset from all sides.</param>
        </member>
        <member name="T:Mafi.Unity.UiFramework.Offset">
            <summary>
            Offset of UI element in pixels.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Offset.RightOffset">
            <summary>
            Positive X offset.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Offset.TopOffset">
            <summary>
            Positive Y offset.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Offset.LeftOffset">
            <summary>
            Negative X offset.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UiFramework.Offset.BottomOffset">
            <summary>
            Negative Y offset.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UiFramework.Offset.LeftRightOffset">
            <summary>
            Horizontal offset.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UiFramework.Offset.TopBottomOffset">
            <summary>
            Vertical offset.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.UiElementListener">
            <summary>
            Unity listener script to be attached to a button GO.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UiFramework.View.ShowAfterSync">
            <summary>
            Whether the view should wait for sync and render pass before being shown.
            </summary>
        </member>
        <member name="E:Mafi.Unity.UiFramework.View.OnShowStart">
            <summary>
            Invoked when this view is about to be showed up.
            </summary>
        </member>
        <member name="E:Mafi.Unity.UiFramework.View.OnShowDone">
            <summary>
            Invoked when this view was successfully showed up.
            </summary>
        </member>
        <member name="E:Mafi.Unity.UiFramework.View.OnHide">
            <summary>
            Invoked when this view gets hidden.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.ViewsCache`2">
            <summary>
            Cache for ui elements to prevent creating the each time they are needed. This is designed for a very special use
            case. That is that it can cache each element (for each data) only once. This is useful for containers where we
            are showing different elements each time but they are never repeated and it is not worth destroying them since
            they might be needed again in very near future (e.g. products in products picker). So the idea is that each such
            container has instance of this cache and directly owns all the elements created by this cache. So it is safe to
            query <see cref="M:Mafi.Unity.UiFramework.ViewsCache`2.GetView(`0)"/> multiple times and the container gets the same element every time. Having each
            instance of cache for each instance of container also prevents reparenting. So all we doing is show / hide.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UiFramework.ViewsCacheHomogeneous`1">
            <summary>
            This is a very simple cache that counts with the fact that its elements can be reused for any input thus they are
            all equivalent. So this cache creates a new view if needed otherwise it provides the ones that were previously
            created and returned to it.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityMod.#ctor(Mafi.Core.CoreMod,Mafi.Unity.UnityModConfig)">
            <summary>
            Unity mod depends on <see cref="T:Mafi.Core.CoreMod"/>
            </summary>
        </member>
        <member name="P:Mafi.Unity.UnityModConfig.DisableOceanRendering">
            <summary>
            Whether ocean should be rendered.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UnityModConfig.ProgressiveChunkInitAtGameStart">
            <summary>
            When set, terrain and ocean chunks will be loaded progressively after the game is started. Otherwise, they
            all appear immediately.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UnityModConfig.ApplyAllTerrainChangesImmediately">
            <summary>
            This makes terrain and water renderers apply all pending changes immediately in sync. This will introduce
            lags.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UnityModConfig.GenerateNonOptimizedWaterChunks">
            <summary>
            Whether to generate all water chunks as simple squares without cutting away parts.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UnityModConfig.IncludeGenLayoutForEntities">
            <summary>
            Whether to include generated layout for all layout entities.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UnityTag">
             <summary>
             Helper enum of all common Unity tags. Use <see cref="M:Mafi.Unity.UnityTagExtensions.HasTag(UnityEngine.GameObject,Mafi.Unity.UnityTag)"/> to test these tags.
             </summary>
             <remarks>
             Since Unity does not support multi-tags, we workaround it with tags concatenated to string and define all needed
             combinations. Note that new tags and new used combinations has to be added in unity editor.
            
             Tags are intentionally short since we test them with <see cref="M:System.String.Contains(System.String)"/> and testing usually happens
             multiple times per frame.
             </remarks>
        </member>
        <member name="F:Mafi.Unity.UnityTag.NoHi">
            <summary>
            No Highlight: Game object marked with this tag will not be highlighted.
            It also prevents setting materials (such as making it blue before it gets built).
            </summary>
        </member>
        <member name="F:Mafi.Unity.UnityTag.NoOnlyHi">
            <summary>
            No Highlight: Game object marked with this tag will not be highlighted.
            This does not prevent setting materials (e.g. making it blue until built).
            </summary>
        </member>
        <member name="F:Mafi.Unity.UnityTag.PiPa">
            <summary>
            Pick Parent: Picker will pick parent object instead of this one.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UnityTag.HdeIcn">
            <summary>
            Marked GOs will not be rendered in the icon.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UnityTagExtensions.HasTag(UnityEngine.GameObject,Mafi.Unity.UnityTag)">
            <summary>
            Whether this <see cref="T:UnityEngine.GameObject"/> is tagged by given tag.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UserInterface.Components.BufferView.UseNegativeColor">
            <summary>
            Set the slider to use a negative color for displayed quantity.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UserInterface.Components.BufferView.UsePositiveColor">
            <summary>
            Set the slider to use a positive color for displayed quantity.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UserInterface.Components.BufferView.UseNeutralColor">
            <summary>
            Set the slider to use a neutral color for displayed quantity.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Components.BufferView.Cache">
            <summary>
            This is a very simple cache that counts with the fact that buffers can be reused for any product thus they
            are all equivalent. So this cache creates a new buffers if needed otherwise it provides the ones that were
            previously returned to it.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UserInterface.Components.BufferViewOneSlider.SetSliderVisibility(System.Boolean)">
            <summary>
            Note: This won't override that the slider is hidden when no product is set.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Components.Levelling.LevelProtoUnlocksView">
            <summary>
            A single row showing unlocks the player gets after attaining the next level.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Components.Levelling.LevelRewardsView">
            <summary>
            A single row showing rewards a player gets for attaining a level.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UserInterface.Components.Levelling.LevelRewardsView.SetLabel(System.String,Mafi.Unity.UiFramework.Components.TextStyle)">
            <summary>
            After setting label, set reward too, setting reward will correct positions of reward labels and icons.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Components.MouseCursorMessage">
            <summary>
            Displays message (and optionally and icon) next to mouse cursor and keeps it there until disabled.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Components.ProductQuantitiesView">
            <summary>
            Displays a grid of products and quantities.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Components.ProductRewardsView">
            <summary>
            Displays a list of products that the player has received as reward / loot.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UserInterface.Components.QuantityBar.UseNegativeColor">
            <summary>
            Set the slider to use a negative color for displayed quantity.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UserInterface.Components.QuantityBar.UsePositiveColor">
            <summary>
            Set the slider to use a positive color for displayed quantity.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UserInterface.Components.QuantityBar.UseNeutralColor">
            <summary>
            Set the slider to use a neutral color.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Components.UnlockingTreeView.ConnectorsRenderer`1">
            <summary>
            Takes care of rendering of lines and arrows between the research nodes.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Components.UnlockingTreeView.IconsWithTitlesView">
            <summary>
            Side panel component that displays units of type <see cref="T:Mafi.Core.UnlockingTree.IUnlockUnitWithTitleAndIcon"/>.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Components.UnlockingTreeView.IUnlockingTreeEditor`1">
            <summary>
            Interface for an editor to be used to edit the research tree during the runtime.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Components.UnlockingTreeView.NoOpUnlockingTreeEditor`1">
            <summary>
            No-op implementation of the editor for production version.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Components.UnlockingTreeView.UnlockingTreeEditor`1">
            <summary>
            Research tree editor that is supposed to be used in the debug mode.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Components.UnlockingTreeView.UnlockingTreeNodeViewBase`1.TitleIcon">
            <summary>
            Type of icon show in the top right corner.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Components.VehiclesAssignerView`1">
            <summary>
            Handles assignment of exactly all prototypes of type T via <see cref="T:Mafi.Unity.UserInterface.Components.VehiclesAssigner.VehicleTypeAssignerView"/>.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Components.VehiclesAssigner.VehicleTypeAssignerView">
            <summary>
            Handles assignment of exactly one prototype.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.GameUiInstantiator">
            <summary>
            Helper class that is responsible for instantiation of all in-game UI. This class does not handle Menus or other
            screens.
            </summary>
        </member>
        <member name="E:Mafi.Unity.UserInterface.IWindowWithInnerWindowsSupport.OnShowStart">
            <summary>
            Invoked when this view is about to be showed up.
            </summary>
        </member>
        <member name="E:Mafi.Unity.UserInterface.IWindowWithInnerWindowsSupport.OnShowDone">
            <summary>
            Invoked when this view was successfully showed up.
            </summary>
        </member>
        <member name="E:Mafi.Unity.UserInterface.IWindowWithInnerWindowsSupport.OnHide">
            <summary>
            Invoked when this view gets hidden.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.BufferViewUiStyle">
            <summary>
            Buffer view styles (used in the storage inspector for instance).
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.QuantityBarUiStyle">
            <summary>
            Quantity bar styles.
            TODO: Try to merge this with BufferViewUiStyle
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.QuantityBarUiStyle.BarColor">
            <summary>
            Use if having a full buffer is a good thing.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.QuantityBarUiStyle.NegativeBarColor">
            <summary>
            Use if having a full buffer is a bad thing (output buffer).
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.QuantityBarUiStyle.PositiveBarColor">
            <summary>
            Use if having a full buffer is a great thing (export buffer).
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.EntitiesMenuUiStyle.ItemHeight">
            <summary>
            Item styles
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.GeneralPanelUiStyle">
            <summary>
            General panel styles that are shared by multiple different panels.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.GlobalUiStyle">
            <summary>
            Global style that is heavily reused by other styles.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.GlobalUiStyle.LightTxtFieldStyle">
            <summary>
            Light text field for dark background.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.LayersLegendUiStyle">
            <summary>
            Styles for resources legend.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.LayersLegendUiStyle.IconSize">
            <summary>
            Size of the icon for each of the items.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.LayersLegendUiStyle.ColorBoxSize">
            <summary>
            Size of box that displays the color of the resource. Border sizes included!
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.LayersLegendUiStyle.ColorBoxBorderStyle">
            <summary>
            Color box border style.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.LayersLegendUiStyle.ShowIconStyle">
            <summary>
            Icon that is displayed when the resource is hidden.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.LayersLegendUiStyle.HideIconStyle">
            <summary>
            Icon that is displayed when the resource is visible.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.MainMenuUiStyle">
            <summary>
            Styles for main menu only.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.NotificationsUiStyle">
            <summary>
            Notifications panel styles.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.NotificationsUiStyle.RightOffset">
            <summary>
            Right offset from the screen of the whole notification panel.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.NotificationsUiStyle.MainButtonNoNotifications">
            <summary>
            Buttons that is displayed when there are NOT any notifications.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.NotificationsUiStyle.MainButtonActive">
            <summary>
            Buttons that is displayed when there are notifications and are visible.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.NotificationsUiStyle.MainButtonCollapsed">
            <summary>
            Button that is displayed when there are notifications but are hidden (minimized).
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.NotificationsUiStyle.MutedButton">
            <summary>
            Buttons that is displayed when there are notifications and are visible.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.NotificationsUiStyle.UnmutedButton">
            <summary>
            Button that is displayed when there are notifications but are hidden (minimized).
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.NotificationsUiStyle.NotificationsCountTextStyle">
            <summary>
            Button that is displayed when there is zero notifications.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.NotificationsUiStyle.ItemsSpacing">
            <summary>
            Spacing between individual notification boxes.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.NotificationsUiStyle.NoItemsInfoTextStyle">
            <summary>
            Text style of message that informs the player that there are no new notifications.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.NotificationsUiStyle.ItemHeight">
            <summary>
            Dimensions of a single notification box. (Righ offset must be included to the width).
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.NotificationsUiStyle.ItemBackground">
            <summary>
            Notification box backgroung.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.NotificationsUiStyle.SuccessIcon">
            ===============================================================
            * Style for
            <see cref="F:Mafi.Core.Notifications.NotificationStyle.Success"/>
            ===============================================================
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.NotificationsUiStyle.WarningIcon">
            ===============================================================
            * Style for
            <see cref="F:Mafi.Core.Notifications.NotificationStyle.Warning"/>
            ===============================================================
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.NotificationsUiStyle.CriticalIcon">
            ===============================================================
            * Style for
            <see cref="F:Mafi.Core.Notifications.NotificationStyle.Critical"/>
            ===============================================================
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.ProductWithIconUiStyle">
            <summary>
            Styles for vertical product with icon.
            </summary>
            <code>
              PRODUCT NAME
                |   |
                |   |
                ------
               QUANTITY
            </code>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.RecipeViewUiStyle">
            <summary>
            Recipe view styles.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.ResearchWindowUiStyle">
            <summary>
            Styles used for the research window.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.SaveLoadPanelUiStyle">
            <summary>
            Styles for save and load panel.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.SaveLoadPanelUiStyle.SaveNameColumnWidth">
            <summary>
            Width of the column containing name of the file in the overview table of existing save files.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.SaveLoadPanelUiStyle.ModifiedColumnWidth">
            <summary>
            Width of the column containing last modification date of the file in the overview table of existing save
            files.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.StatisticsPanelUiStyle">
            <summary>
            Styles for statistics.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.StatisticsPanelUiStyle.ProductsIcon">
            <summary>
            Icons for tab headers.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.StatusBarUiStyle.PauseButtonOffset">
            <summary>
            Inner offset of the pause button (how far is the icon from borders).
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.StatusBarUiStyle.PauseIconSize">
            <summary>
            Dimensions of play and pause icons.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.StatusBarUiStyle.PlayPauseSpacing">
            <summary>
            Spacing between play and pause icon.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.ToolbarUiStyle">
            <summary>
            Styles for toolbar only.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.ToolbarUiStyle.CaptionsStyle">
            <summary>
            Style of labels in 3d menu.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.ToolbarUiStyle.ButtonOn">
            <summary>
            Highlighted button (when its panel is active).
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.ToolbarUiStyle.ButtonNegative">
            <summary>
            Red
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.ToolbarUiStyle.GameMenuButtonsOffset">
            <summary>
            Left and right offsets of the buttons from the panel borders.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.ToolbarUiStyle.ToolboxButton">
            <summary>
            Toolbox button style.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.ToolbarUiStyle.ToolboxButtonActive">
            <summary>
            Toolbox button style that is selected = toggled on.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.ToolbarUiStyle.ToolboxShortcutText">
            <summary>
            Style of text displaying a shorcut key.
            </summary>
        </member>
        <member name="P:Mafi.Unity.UserInterface.Style.ToolbarUiStyle.ToolboxShortcutBackground">
            <summary>
            Background under the shortcut text.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.TradeWindowsUiStyle">
            <summary>
            Trade panel styles.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.UnlockingTreeWindowUiStyle">
            <summary>
            Style used in UnlockingTreeWindowView and its nodes.
            </summary>
        </member>
        <member name="T:Mafi.Unity.UserInterface.Style.VehiclesAssignerUiStyle">
            <summary>
            Styles for vehicles assigner widget.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UserInterface.UiBuilder.ElementsCache">
            <summary>
            Avoids UI using static cache for singletons. Users of the cache are responsible to have unique key
            and cast values to proper types.
            </summary>
        </member>
        <member name="F:Mafi.Unity.UserInterface.UiBuilder.m_goToClone">
            <summary>
            Dummy go that is created to be instantiated instead of us calling new GameObject(). This allows
            to set parent before new go is created and avoid expensive re-parenting.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UserInterface.WindowView.AddOverlay(System.Action)">
            <summary>
            Used to overlay a window when another window is active above it.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UserInterface.WindowView.PositionSelfToCenter(System.Boolean,Mafi.Unity.UiFramework.Offset)">
            <summary>
            Positions the window to the center of the screen while setting it the given dimensions.
            </summary>
        </member>
        <member name="M:Mafi.Unity.UserInterface.WindowView.PositionSelfToFullscreen(System.Boolean)">
            <summary>
            Positions the window to the center of the screen while setting it the given dimensions.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Utils.ActivatorState">
            <summary>
            Encapsulates an activation state - active/inactive, that can be changed by multiple different sources.
            This class counts number of activations to allow overlapping calls.
            The activation itself is done through <see cref="T:Mafi.Unity.Utils.ActivatorState.Activator"/> created using <see cref="M:Mafi.Unity.Utils.ActivatorState.CreateActivator"/>.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Utils.AnimationSyncer">
             <summary>
             Synchronizes animation with sim state. This uses speed-based synchronization that smoothly changes animation
             speed to match the sim state instead of jumping the animation every sync that introduces jitter.  Another
             benefit is that calling <see cref="M:UnityEngine.Animator.Play(System.Int32)"/> every sync causes performance overhead.
             </summary>
             <remarks>
             When using this syncer make sure that the first <see cref="M:Mafi.Unity.Utils.AnimationSyncer.Sync(System.Single,System.Single)"/> after <see cref="M:Mafi.Unity.Utils.AnimationSyncer.PlayNew(System.Int32,System.Single)"/> already has
             non-zero <c>targetNormTime</c>.
            
             If sim state counts <c>animValue</c> from <c>0</c> to <c>n-1</c> (animation of length <c>animLength = n</c>),
             the correct formula for <c>targetNormTime</c> passed to <see cref="M:Mafi.Unity.Utils.AnimationSyncer.Sync(System.Single,System.Single)"/> is
             <c>targetNormTime = (float)(animValue + 1) / targetNormTime</c>.
            
             This syncer still assumes that the animation speed in Unity is the same as speed in game sim.
             If the speed is too different, this class reverts to jumping to avoid crazy fast or crazy slow animations
             in case of "jumps" in animations state.
             </remarks>
        </member>
        <member name="M:Mafi.Unity.Utils.AnimationSyncer.Sync(System.Single,System.Single)">
            <summary>
            Call every sync.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Utils.AnimationSyncer.PlayNew(System.Int32,System.Single)">
            <summary>
            Starts new animation. Must be called BEFORE <see cref="M:Mafi.Unity.Utils.AnimationSyncer.Sync(System.Single,System.Single)"/>. This assumes that the animation was
            started at the beginning of the last sim update is already playing for one tick at this point.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Utils.AnimationSyncer.Stop">
            <summary>
            Stops the animation. Similarly as <see cref="M:Mafi.Unity.Utils.AnimationSyncer.PlayNew(System.Int32,System.Single)"/> this assumes that the animation was stopped at the
            start of last sim update (last sync was updated to a value near 1.0).
            </summary>
        </member>
        <member name="T:Mafi.Unity.Utils.CombinedActivator">
            <summary>
            Combines multiple activators into one which affects all at once.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Utils.CoroutineHelper">
            <summary>
            Allows invoking coroutines from outside of MonoBehaviors.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Utils.DelayedItemsProcessing`1">
            <summary>
            Accepts additions and removals on the sim thread and properly synchronizes these events to be propagated to the
            render thread. The order of events is preserved.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Utils.IActivator">
            <summary>
            General interface for an activator of UI components (mainly for visualizations or UI tools). There may be
            several classes that want to activate/deactivate (show/hide) certain UI components, each of them gets
            one IActivator and activates the component through the activator.
            The activator allows for greater flexibility and error checks than simple Activate/Deactivate methods.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Utils.IActivator.Deactivate">
            <summary>
            Deactivates the target component, logs an error, if the target component was not active.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Utils.IActivator.DeactivateIfActive">
            <summary>
            Same as <see cref="M:Mafi.Unity.Utils.IActivator.Deactivate"/>, but does not log errors.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Utils.OptionalParticlesWrapper">
            <summary>
            Convenient wrapper that hides the fact that particles might be missing. Definitely better
            than crashing the game or break rendering.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Utils.ReversibleAnimationSyncer">
             <summary>
             Similar to <see cref="T:Mafi.Unity.Utils.AnimationSyncer"/> for for reversible animations.
            
             Note that speed mult parameter is used to reverse animations. It must be defined as a parameter on the AC
             and be set as speed multiplier on the animation clip. Since parameters are global for the entire AC, you will
             need to define more parameters if there are more reversible clips in the animator.
             </summary>
             <remarks>
             For no good reason, Unity does not support setting <see cref="P:UnityEngine.Animator.speed"/> negative, but allows
             setting a custom animator parameter that is speed multiplier to negative number. This is the only way to
             achieve backwards playback.
             </remarks>
        </member>
        <member name="M:Mafi.Unity.Utils.ReversibleAnimationSyncer.Sync(System.Single,System.Single)">
            <summary>
            Call every sync.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Utils.ReversibleAnimationSyncer.PlayNew(System.Int32,System.Int32,System.Single,System.Boolean)">
            <summary>
            Starts new animation. Must be called BEFORE <see cref="M:Mafi.Unity.Utils.ReversibleAnimationSyncer.Sync(System.Single,System.Single)"/>. This assumes that the animation was
            started at the beginning of the last sim update is already playing for one tick at this point.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Utils.ReversibleAnimationSyncer.Stop">
            <summary>
            Stops the animation. Similarly as <see cref="M:Mafi.Unity.Utils.ReversibleAnimationSyncer.PlayNew(System.Int32,System.Int32,System.Single,System.Boolean)"/> this assumes that the animation was stopped at the
            start of last sim update (last sync was updated to a value near 1.0).
            </summary>
        </member>
        <member name="M:Mafi.Unity.Utils.TextureArrayUtils.Create2DArrayOrThrow(System.String,UnityEngine.Texture2D[],System.Boolean,System.Nullable{UnityEngine.TextureFormat},System.Nullable{UnityEngine.TextureWrapMode},System.Nullable{UnityEngine.FilterMode},System.Nullable{System.Int32})">
            <summary>
            Creates texture array from the given textures. Any invalid or null textures are skipped.
            </summary>
            <remarks>
            TODO: Use nullable instead of OptionPlus once obfuscator does not crash on these.
            </remarks>
        </member>
        <member name="T:Mafi.Unity.GameObjectPool">
            <summary>
            Specialized object pool for instances of <see cref="T:UnityEngine.GameObject"/>. Unlike <see cref="T:Mafi.ObjectPool`1"/> this class
            is not thread safe and is prepared to store items more long term.
            </summary>
        </member>
        <member name="M:Mafi.Unity.GameObjectPool.ReturnInstance(UnityEngine.GameObject@)">
            <summary>
            Returns instance to the pool. It resets parent of given GO and sets it inactive. Given <paramref name="go"/>
            is set to null.
            </summary>
        </member>
        <member name="T:Mafi.Unity.MbPool`1">
            <summary>
            Specialized object pool for instances of <see cref="T:UnityEngine.MonoBehaviour"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MbPool`1.ReturnInstance(`0@)">
            <summary>
            Returns instance to the pool. It resets parent GO and sets it inactive. Given <paramref name="mb"/> is set to
            null.
            </summary>
        </member>
        <member name="P:Mafi.Unity.MeshBuilder.Instance">
            <summary>
            Returns global clean instance for mesh construction. It is responsibility of the caller to clear the builder
            when he is doe with it! This instance should not be cached or stored and should be used to produce mesh
            within small scope. Returned builder is unique per thread. For more complicated mesh building please create
            your own instance.
            </summary>
            <remarks>
            Sharing one instance of a builder prevents re-allocation of all the buffers and reduces memory footprint
            compared to privately owned builders.
            </remarks>
        </member>
        <member name="P:Mafi.Unity.MeshBuilder.Translation">
            <summary>
            Current translation applied to all appended vertices. It is reset after clearing or by calling <see
            cref="M:Mafi.Unity.MeshBuilder.ResetTransform"/>.
            </summary>
        </member>
        <member name="P:Mafi.Unity.MeshBuilder.Rotation">
            <summary>
            Current rotation applied to all appended vertices and normals. It is reset after clearing or by calling <see
            cref="M:Mafi.Unity.MeshBuilder.ResetTransform"/>.
            </summary>
        </member>
        <member name="P:Mafi.Unity.MeshBuilder.Scale">
            <summary>
            Current scale applied to all appended vertices. It is reset after clearing or by calling <see
            cref="M:Mafi.Unity.MeshBuilder.ResetTransform"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.SetTransform(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
            <summary>
            Sets current transformation. More effective than setting each property separately. Transform is reset after
            clearing or by calling <see cref="M:Mafi.Unity.MeshBuilder.ResetTransform"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.ResetTransform">
            <summary>
            Resets current transform to identity.
            </summary>
        </member>
        <member name="P:Mafi.Unity.MeshBuilder.VerticesCount">
            <summary>
            Number of Currently stored vertices.
            </summary>
        </member>
        <member name="P:Mafi.Unity.MeshBuilder.IsEmpty">
            <summary>
            Whether this builder is empty and there are no vertices or indices stored.
            </summary>
        </member>
        <member name="P:Mafi.Unity.MeshBuilder.IsNotEmpty">
            <summary>
            Whether this builder is NOT empty.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.Clear">
            <summary>
            Clears all stored data. This is O(1) operation.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.UpdateGoAndClear(UnityEngine.GameObject,System.Boolean)">
            <summary>
            Updates mesh of given game object. Creates <see cref="T:UnityEngine.MeshFilter"/> and <see cref="T:UnityEngine.MeshRenderer"/> if
            necessary.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.UpdateMbAndClear(Mafi.Unity.IBuildable,System.Boolean,System.Boolean)">
            <summary>
            Updates given <paramref name="buildableMb"/> with currently stored data and then clears all the data.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.GetMbUpdatePackageAndClear(System.Boolean,System.Boolean)">
            <summary>
            Returns update package of current builder state and clears all the data.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.AddTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color32)">
            <summary>
            Adds one sided triangle (clock wise). The vectors are assumed to be in unity space (swapped Y-Z). Adds 3
            vertices and 3 indices.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.AddQuad(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color32)">
            <summary>
            Adds quad created as two triangles (vertices clock-wise). The quad is expected to be planar (has one normal)!
            If not, add two triangles instead. The vectors are assumed to be in unity space (swapped Y-Z). Adds 4
            vertices and 6 indices.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.AddAaBox(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color32,Mafi.Unity.BoxFaceMask)">
            <summary>
            Adds an axis-aligned box at given <paramref name="center"/> and <paramref name="radius"/>. Adds 24 vertices
            and 36 indices.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.AddBox(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color32)">
            <summary>
            Adds an a box between given points <paramref name="from"/> and <paramref name="to"/>. Adds 24 vertices and 36
            indices.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.AddBox(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color32,UnityEngine.Color32)">
            <summary>
            Adds an a box between given points <paramref name="from"/> and <paramref name="to"/>. Adds 24 vertices and 36
            indices.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.AddMesh(UnityEngine.Mesh,System.Boolean)">
            <summary>
            Adds Unity mesh to this mesh builder.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.AddAllMeshes(UnityEngine.GameObject,System.Boolean,System.Boolean)">
            <summary>
            Adds all meshes from given Game Object to this mesh builder.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.StartExtrusion(Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Core.Gfx.CrossSectionVertex}},UnityEngine.Vector3,Mafi.Vector3f,Mafi.Vector3f,System.Single)">
            <summary>
            Start extrusion of give <paramref name="crossSection"/> by just adding all vertices of the cross-section at
            given coordinate. This should be called once at the start of extrusion. Then call <see
            cref="M:Mafi.Unity.MeshBuilder.ContinueExtrusion(Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Core.Gfx.CrossSectionVertex}},UnityEngine.Vector3,Mafi.Vector3f,Mafi.Vector3f,System.Single)"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.ContinueExtrusion(Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Core.Gfx.CrossSectionVertex}},UnityEngine.Vector3,Mafi.Vector3f,Mafi.Vector3f,System.Single)">
            <summary>
            Continues extrusion by adding new <paramref name="crossSection"/> and connecting it with the previous one.
            This method can be called either after <see cref="M:Mafi.Unity.MeshBuilder.StartExtrusion(Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Core.Gfx.CrossSectionVertex}},UnityEngine.Vector3,Mafi.Vector3f,Mafi.Vector3f,System.Single)"/> or <see cref="M:Mafi.Unity.MeshBuilder.ContinueExtrusion(Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Collections.ImmutableCollections.ImmutableArray{Mafi.Core.Gfx.CrossSectionVertex}},UnityEngine.Vector3,Mafi.Vector3f,Mafi.Vector3f,System.Single)"/>.
            </summary>
        </member>
        <member name="M:Mafi.Unity.MeshBuilder.AddTriangleIndicesRelative(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds three indices. Given indices are incremented by current vertex count.
            </summary>
        </member>
        <member name="F:Mafi.Unity.MeshBuilder.GuiLineBuilder.m_buildInProgress">
            <summary>
            Whether we are in a process of line creation, used to check that all line creations are properly started.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Vehicles.AttachmentMb.SyncUpdate">
            <summary>
            Called on the main thread when both sim and update threads are in sync. Limit processing in this method to
            absolute minimum.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Vehicles.AttachmentMb.RenderUpdate(Mafi.Core.GameTime)">
            <summary>
            Called once very frame on the main thread.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Vehicles.AttachmentMb.Reset">
            <summary>
            Reset before we return current instance to the pool.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Vehicles.IAttachmentMbFriend">
            <summary>
            Friend interface of <see cref="T:Mafi.Unity.Vehicles.AttachmentMb"/> used by factories to pool <see cref="T:Mafi.Unity.Vehicles.AttachmentMb"/> objects.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Vehicles.TracksAnimator.#ctor(UnityEngine.Transform,System.String,System.String,System.Single,System.Single)">
            <param name="spacingBetweenTracksM">Distance between tracks. This is used to convert angular velocity to track movement.</param>
            <param name="textureLengthM">How many meters is one texture length of the track.</param>
        </member>
        <member name="M:Mafi.Unity.Vehicles.TracksAnimator.Sync(Mafi.Core.GameTime,Mafi.RelTile1f,Mafi.AngleDegrees1f)">
            <summary>
            Updates position of the tracks using speed of the vehicle they belong to.
            </summary>
        </member>
        <member name="M:Mafi.Unity.Vehicles.VehicleLightsController.#ctor(UnityEngine.GameObject,System.Nullable{System.Int32})">
            <summary>
            Note: This will instantiate materials that have the `emissionStrengthPropertyId`.
            </summary>
        </member>
        <member name="T:Mafi.Unity.Vehicles.VehiclesPathabilityOverlayRenderer.VehiclePathabilityInstanceData">
            <summary>
            Per-instance data that is passed to GPU. Layout of this struct must match the `InstanceData` struct
            in the shader.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Vehicles.WheelsAnimator.m_steeringRotationAxis">
            <summary>
            Axis to rotate wheels around when steering.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Vehicles.WheelsAnimator.m_rollingRotationAxis">
            <summary>
            Axis to rotate wheels around when rolling.
            </summary>
        </member>
        <member name="F:Mafi.Unity.Vehicles.WheelsAnimator.m_wheelRotationPerSpeedDeg">
            <summary>
            How many degrees to rotate per one unit of speed (in in RelTile1f). Float used for higher precision.
            </summary>
        </member>
    </members>
</doc>
